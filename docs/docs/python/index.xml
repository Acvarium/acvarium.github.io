<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Основи Python on 3D Vitalii Shmorhun</title>
        <link>https://3dvit.in.ua/docs/python/</link>
        <description>Recent content in Основи Python on 3D Vitalii Shmorhun</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>uk-ua</language><atom:link href="https://3dvit.in.ua/docs/python/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>1. Змінні та оператори</title>
        <link>https://3dvit.in.ua/docs/python/var/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://3dvit.in.ua/docs/python/var/</guid>
        <description>&lt;h2 id=&#34;що-таке-змінна&#34;&gt;Що таке змінна?
&lt;/h2&gt;&lt;p&gt;Змінна - це іменовані об&amp;rsquo;єкти даних, котрі зберігаються і використовуються в програмах.&lt;/p&gt;
&lt;p&gt;Припустимо, ваша програма повинна зберігати вік користувача. Для цього ми можемо назвати ці наді &lt;code&gt;user_age&lt;/code&gt; і привоїти значення цій змінні подібним чином:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;user_age&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Після того, як ви визначили змінну &lt;code&gt;user_age&lt;/code&gt;, програма виділила виділяє певний обсяг пам&amp;rsquo;яті, для зберігання цих даних. В подільшому можна отримати доступ до цих даних та змінити їх, посилаючись на них за ім&amp;rsquo;ям.
Коли ви оголошуєте нову змінну, ви можете визначити для неї початкове значення. В нашому попередньому прикладі це значення було &lt;code&gt;0&lt;/code&gt;.
Також &lt;code&gt;Python&lt;/code&gt; дозволяє робити оголошення кількох змінних в один рядок:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;user_age&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;user_name&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Peter&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;як-слід-іменувати-змінні&#34;&gt;Як слід іменувати змінні?
&lt;/h2&gt;&lt;p&gt;Імена змінних в &lt;code&gt;Python&lt;/code&gt; можуть містити тільки малі та великі літери латинського алфавіту (a-z, A-Z), числа, або символ підкреслення (_). Першим символом не може бути цифра. Таким чином ви можете назвати свої змінні &lt;code&gt;userName&lt;/code&gt;, &lt;code&gt;user_name&lt;/code&gt;, &lt;code&gt;user_name2&lt;/code&gt; але не &lt;code&gt;2user_name&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Крім того, існують певні зарезервовані слова, котрі неможна використовувати як імена для змінних, так як вони уже мають заздалегіть визначене значення. Прикладом таких зарезервованих слів є &lt;code&gt;print&lt;/code&gt;, &lt;code&gt;inout&lt;/code&gt;, &lt;code&gt;if&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt; і т.п. Детальніше про них буде розглянуто пізніше.&lt;/p&gt;
&lt;p&gt;Також потрібно брати до уваги, що &lt;code&gt;Python&lt;/code&gt; є чутливим до регістру символів. А це означає, що назва &lt;code&gt;username&lt;/code&gt; та &lt;code&gt;userName&lt;/code&gt; сприйматимуться ним як різні.&lt;/p&gt;
&lt;p&gt;Оскільки назви змінних можуть складатись з кількох слів, та розділяти ці слова пробілом не можна, оскільки це буде синтаксичною помилкою, то потрібно обрати якийсь спосіб записання цих слів в одну назву.
Існує декілька підходів до цього питання і кожен з них має своє застосування на норми примінення.&lt;/p&gt;
&lt;p&gt;Ось 4 способи написання:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;snake_case&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;MACRO_CASE&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;camelCase&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;CapWords&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Для &lt;code&gt;Python&lt;/code&gt; прийнято за правило використання &lt;code&gt;snake_case&lt;/code&gt; коли йдеться по найменування змінних.&lt;/p&gt;
&lt;h2 id=&#34;оператор-присвоєння&#34;&gt;Оператор присвоєння
&lt;/h2&gt;&lt;p&gt;В програмуванні &lt;code&gt;=&lt;/code&gt; називають оператором присвоєння. Це означає, що значення справа від символ &lt;code&gt;=&lt;/code&gt; присвоюється змінній, назва якої зліва, як у прикладі, що ми розглядали раніше:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;user_age&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;В програмуванні, на відміну від математики, вирази &lt;code&gt;x = y&lt;/code&gt; та &lt;code&gt;y = x&lt;/code&gt; означають зовсім різні речі.&lt;/p&gt;
&lt;p&gt;Розглянемо це на прикладі:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;x = &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;y = &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Якщо цей код запустити, ви отримаєте такий результат:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;x = 10
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;y = 10
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Хоча &lt;code&gt;x&lt;/code&gt; має початкове значення 5 (як було оголошено в першому рядку).
Внесемо зміни в цю програму. Змінимо тільки один рядок з &lt;code&gt;x = y&lt;/code&gt; на &lt;code&gt;y = x&lt;/code&gt;.
З точки зору математики, це одне і те ж. Але в програмуванні, це не так. Ось результат виконання нашого нового коду:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;x = 5
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;y = 5
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Тут &lt;code&gt;x&lt;/code&gt; залишається рівним 5, а значення &lt;code&gt;y&lt;/code&gt; змінилось. Це тому, що ми маємо справу з оператором присвоєння, і значення, що розташовується справа присвоюється змінній, що зліва.&lt;/p&gt;
&lt;h2 id=&#34;математичні-операції-та-відповідні-оператори&#34;&gt;Математичні операції та відповідні оператори
&lt;/h2&gt;&lt;p&gt;Крім присвоєння змінній початкового значення, існують оператори для усіх базових математичних операцій. Серед них &lt;code&gt;Python&lt;/code&gt; підтримує додавання (+), віднімання (-), множення (*), ділення (/), цілочисельного ділення (//), визначення остатку від ділення (%) та піднесення до степеню (**).&lt;/p&gt;
&lt;h2 id=&#34;додаткові-оператори-присвоєння&#34;&gt;Додаткові оператори присвоєння
&lt;/h2&gt;&lt;p&gt;Крім основного оператора &lt;code&gt;=&lt;/code&gt; в &lt;code&gt;Python&lt;/code&gt; (як і в більшості мов програмування) є ще декілька додаткових операторів присвоєння. До них відносяться такі оператори як &lt;code&gt;+=&lt;/code&gt;, &lt;code&gt;-=&lt;/code&gt;, &lt;code&gt;*=&lt;/code&gt;, &lt;code&gt;/=&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Припустимо є змінна &lt;code&gt;x&lt;/code&gt; з початковим значенням &lt;code&gt;10&lt;/code&gt;. Якщо треба збільшити &lt;code&gt;x&lt;/code&gt; на 2, то можна написати:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Програма спочатку оцінить вираз справа (x + 2) і назначить відповідь змінній зліва. Замість того, щоб писати &lt;code&gt;x = x + 2&lt;/code&gt;, можна написати &lt;code&gt;x += 2&lt;/code&gt;. Цей вираз еквівалентний.&lt;/p&gt;
&lt;p&gt;Таким самим чином можна зробити з відніманням чи множенням.&lt;/p&gt;
&lt;p&gt;Крім операторів, що ми розглянули в цьому розділі, існують також оператори порівняння, логічні оператори, оператори побітових операцій&amp;hellip; Деякі з них ми розглянемо пізніше.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>2. Типи даних</title>
        <link>https://3dvit.in.ua/docs/python/datatypes/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://3dvit.in.ua/docs/python/datatypes/</guid>
        <description>&lt;h1 id=&#34;типи-даних-в-python&#34;&gt;Типи даних в Python
&lt;/h1&gt;&lt;p&gt;Перейдемо до типів даних в мові &lt;code&gt;Python&lt;/code&gt;. Тип даних відноситься до значенню, яке зберігає змінна.&lt;/p&gt;
&lt;p&gt;Ми розглянемо деякі основні типи даних в &lt;code&gt;Python&lt;/code&gt;, зокрема, цілі числа, числа з плаваючою точкою, строки. Даля розглянемо ще 3 важливі типи: список, кордеж та словник.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>3. Перетворення типів даних</title>
        <link>https://3dvit.in.ua/docs/python/converting/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://3dvit.in.ua/docs/python/converting/</guid>
        <description>&lt;h1 id=&#34;перетворення-типів-даних-в-python&#34;&gt;Перетворення типів даних в Python
&lt;/h1&gt;&lt;p&gt;Іноді в програмуванні потрібно перетворити один тип даних в другий, наприклад ціле число в строку. Така операція називається приведення типу.&lt;/p&gt;
&lt;p&gt;Існують 2 види цього самого приведення типу, а саме:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;неявне (англ. explicit);&lt;/li&gt;
&lt;li&gt;явне (англ. implicit);&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Явне приведення задається програмістом в тексті програми за допомогою певних конструкцій мови, чи використання спеціальних функцій.&lt;br&gt;
Неявне приведення виконується транслятором (компілятором чи інтерпретатором коду), за правилами, що описані в стандарті мови.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>4. Інтерактивність</title>
        <link>https://3dvit.in.ua/docs/python/inter/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://3dvit.in.ua/docs/python/inter/</guid>
        <description>&lt;h1 id=&#34;інтерактивність&#34;&gt;Інтерактивність
&lt;/h1&gt;&lt;p&gt;Ми уже розглянули базові поняття про змінні, давайте напишемо програму, що використовує їх. Наша програма буде дуже простою. Це буде привітання світу, але трохи більш особисте. Ми не просто привітаємо світ, а зробимо так, щоб світ знав наше ім&amp;rsquo;я та вік.&lt;/p&gt;
&lt;p&gt;Працюючи з сучасними програмами, ми маємо справу з складним інтерфейсом та великою кількістю способів вводу інформації та впливу на роботу цієї програми зі сторони користувача.&lt;/p&gt;
&lt;p&gt;Але ми вивчаємо самі основи з основ. Для таких випадків програмісти часто звертаються до так званої консолі. Цей спосіб взаємодії з комп&amp;rsquo;ютером веде свій початок ще тоді, на зачатках самої історії комп&amp;rsquo;ютерів. Все, що нам потрібно, це спосіб надрукувати якийсь текст на екран, та спосіб ввести наші дані для опрацювання програмою.&lt;/p&gt;
&lt;p&gt;Ось код, для нашого особистого привітання до світу:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;my_name&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;input&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Будь-ласка, введіть своє ім&amp;#39;я: &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;my_age&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;input&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;А також ваш вік: &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Вітаю тебе, світ. Мене звуть&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;my_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;і мені&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;my_age&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;років.&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;В наступних двох розділах ми детальніше розглянемо, що саме відбувається у цьому коді.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>5. Команди управління</title>
        <link>https://3dvit.in.ua/docs/python/commands/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://3dvit.in.ua/docs/python/commands/</guid>
        <description>&lt;h1 id=&#34;умови-та-логічні-операції&#34;&gt;Умови та логічні операції
&lt;/h1&gt;&lt;p&gt;Усі інструкції управління мають справу з оцінкою умов. Програма вестиме себе по різному, в залежності від того, чи виконується якась умова.&lt;/p&gt;
&lt;p&gt;Самим розповсюдженим умовним оператором є оператор порівняння. Якщо ми хочемо порівняти, чи збігаються два числа, то використовуємо оператор &lt;code&gt;==&lt;/code&gt;. Наприклад, вираз &lt;code&gt;x == y&lt;/code&gt; просить програму, перевірити, чи дорівнює значення змінної &lt;code&gt;x&lt;/code&gt; значенню змінної &lt;code&gt;y&lt;/code&gt;.
Якщо вони рівні одне одному, то умову виконано, і оператор поверне значення &lt;code&gt;True&lt;/code&gt;. Якщо ж ні, то ми отримаємо значення &lt;code&gt;False&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Другим оператором порівняння є &lt;code&gt;!=&lt;/code&gt; (не рівно). Він дає протилежний результат до оператора &lt;code&gt;==&lt;/code&gt;. Тобто, якщо значення рівні одне одному, ми отримаємо &lt;code&gt;False&lt;/code&gt; і навпаки.
За ним існують оператори &lt;code&gt;&amp;lt;&lt;/code&gt; (менше), &lt;code&gt;&amp;gt;&lt;/code&gt; (більше), &lt;code&gt;&amp;lt;=&lt;/code&gt; (менше або дорівнює), &lt;code&gt;&amp;gt;=&lt;/code&gt; (більше або дорівнює).&lt;/p&gt;
&lt;p&gt;Існують 3 логічні оператори, які дозволяють об&amp;rsquo;єднати декілька умов. Ними є:
&lt;code&gt;and&lt;/code&gt;, &lt;code&gt;or&lt;/code&gt;, &lt;code&gt;not&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Оператор &lt;code&gt;and&lt;/code&gt; повертає значення &lt;code&gt;True&lt;/code&gt;, якщо усі умови виконані. В іншому випадку повертає &lt;code&gt;False&lt;/code&gt;.
Наприклад вираз &lt;code&gt;5 == 5 and 2 &amp;gt; 1&lt;/code&gt; поверне &lt;code&gt;True&lt;/code&gt;, оскільки обидві умови являються істиною.&lt;/p&gt;
&lt;p&gt;Оператор &lt;code&gt;or&lt;/code&gt; повертає значення &lt;code&gt;True&lt;/code&gt;, якщо хоча б одна з умов дійсна.
Вираз &lt;code&gt;5 &amp;gt; 2 or 7 &amp;gt; 10 or 3 == 2&lt;/code&gt; поверне &lt;code&gt;True&lt;/code&gt;, не зважаючи на те, що друга і третя умови не є правдою.&lt;/p&gt;
&lt;p&gt;Оператор &lt;code&gt;not&lt;/code&gt; повертає &lt;code&gt;True&lt;/code&gt;, якщо умова після цього ключового слова не є дійсним. Тобто, він обертає значення. Вираз &lt;code&gt;2 &amp;gt; 5&lt;/code&gt; поверне &lt;code&gt;False&lt;/code&gt; оскільки 2 не є більше за 5. Але вираз &lt;code&gt;not 2 &amp;gt; 5&lt;/code&gt; поверне &lt;code&gt;True&lt;/code&gt;.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>6. Функції</title>
        <link>https://3dvit.in.ua/docs/python/func/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://3dvit.in.ua/docs/python/func/</guid>
        <description>&lt;h1 id=&#34;що-таке-функція&#34;&gt;Що таке функція?
&lt;/h1&gt;&lt;p&gt;Функція являє собою готовий блок коду, для виконання якоїсь задачі.&lt;/p&gt;
&lt;p&gt;В залежності від того, як написана функція, чи являється вона частиною класу (клас - це концепція об&amp;rsquo;єктно орієнтованого програмування, котру ви розглянете пізніше) і як вона імпортується, при виклику функції можна або просто ввести її ім&amp;rsquo;я, або скористатись точковим записом.
Ми уже розглядали функцію &lt;code&gt;print()&lt;/code&gt;, яка є вбудованою та існує сама по собі. Та функція &lt;code&gt;.format()&lt;/code&gt;, яка є методом, що викликається для об&amp;rsquo;єкту &lt;code&gt;string&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Деяким функціям для виконання своїх операцій необхідні додаткові дані, котрі потрібно передати їм при виклику. Такі наді називаються &lt;em&gt;аргументами&lt;/em&gt;. Щоб передати аргументи функції, їх потрібно записати в дужках після нави функції, та розділяти комою.&lt;/p&gt;
&lt;p&gt;Наприклад, як з добре відомою нам функцією &lt;code&gt;print()&lt;/code&gt;, для виводу тексту на екран, його потрібно передати в дужках таким чином:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Hello world&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Тут &lt;code&gt;print&lt;/code&gt; - це назва функції, а &lt;code&gt;&amp;quot;Hello world&amp;quot;&lt;/code&gt; - аргумент.&lt;/p&gt;
&lt;p&gt;Деякі функції можуть повертати результат після виконання своїх задач. Наприклад, функція input(), яку ми також уже розглядали. Результат цей можна передати змінній, та працювати з ним як з будь-якими іншими даними.&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
