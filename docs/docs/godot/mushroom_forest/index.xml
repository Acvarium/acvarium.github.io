<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>3D Vitalii Shmorhun</title>
        <link>http://localhost:1313/docs/godot/mushroom_forest/</link>
        <description>Recent content on 3D Vitalii Shmorhun</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>uk-ua</language><atom:link href="http://localhost:1313/docs/godot/mushroom_forest/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>1. Знайомство з проектом</title>
        <link>http://localhost:1313/docs/godot/mushroom_forest/010_introduction/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/docs/godot/mushroom_forest/010_introduction/</guid>
        <description>&lt;h1 id=&#34;знайомство-з-проектом&#34;&gt;Знайомство з проектом
&lt;/h1&gt;&lt;hr&gt;
&lt;p&gt;Тож ви завантажили та розпакували базу проекту, та відкрили його в &lt;code&gt;Godot&lt;/code&gt;. Давайте трохи оглянемось навколо. Почнемо з головної сцени, сцени &lt;code&gt;Main.tscn&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Тут, згори вниз, є:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Сам вузол &lt;code&gt;Main&lt;/code&gt;. Як і з попередніми проектами, він виконуватиме роль диригента. Але крім цього, саме цей вузол буде опрацьовувати сигнали від мишки та відправляти відповідні команди гравцю.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;CameraHolder&lt;/code&gt; - вузол який містить камеру. Комбінація із цих двох вузлів пізніше дозволить нам зробити зручне управління камерою, та прив&amp;rsquo;язати погляд гравця до руху персонажа в грі.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;MousePosPointer&lt;/code&gt; - це невеличка куля, яка в собі містить аніматор з двома анімаціями. Цю кулю ми будемо розміщувати у відповідні позиції, куди натискає гравець, та відтворювати відповідну анімацію.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;World&lt;/code&gt; - це вузол який міститиме моделі та фізичне представлення світу навколо персонажу. Поки тут є два джерела світла, одне з яких забезпечує легку тінь, а друге лише додаткове світло в сцені. Також тут є модель що представляє поверхню землі, та статичний об&amp;rsquo;єкт всередині цієї моделі.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;UI&lt;/code&gt; - це вузол класу &lt;code&gt;CanvasLayer&lt;/code&gt;, який міститиме усе, що стосується інтерфейсу користувача. На даний момент він уже містить два текстових поля, в один з яких ми будемо виводити список усього, що зібрав гравець. А в інший - дані про об&amp;rsquo;єкт, на який наведено мишку.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Player&lt;/code&gt; - це власне вузол, що являє собою персонажа гри. Поки його форма представлена зеленою капсулою та червоним паралелепіпедом. Останній тут лише для того, щоб вказувати нам, куди саме дивиться персонаж. Вузол &lt;code&gt;Player&lt;/code&gt; уже містить увесь необхідний код, тож вам не доведеться його писати. Він багато в чому схожий на той, що ми писали для гравця в проекті з лабіринтом. Але є і свої особливості. Кожен рядок цього коду має рядок або й два з коментарем, де детально розписано, що саме він виконує. Тож, раджу заглянути до цього файлу та перечитати, що тут і як.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Головна особливість вузла &lt;code&gt;Player&lt;/code&gt; - що він може отримувати команди про те, куди йому рухатись і що робити. Отримавши команду, він почне автономно переміщуватись в визначену позицію.&lt;/p&gt;
&lt;p&gt;Окрім того, чим наповнена головна сцена, сам проект уже має певні ресурси, які стануть нам в нагоді по мірі роботи.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>2. Куди вказує курсор</title>
        <link>http://localhost:1313/docs/godot/mushroom_forest/020_point_and_click/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/docs/godot/mushroom_forest/020_point_and_click/</guid>
        <description>&lt;h1 id=&#34;куди-вказує-курсор&#34;&gt;Куди вказує курсор
&lt;/h1&gt;&lt;hr&gt;
&lt;p&gt;Тепер, коли ми трохи ознайомились зі стартовим проектом, візьмемось до його розширення. Персонаж в цій грі має пересуватись в точку, куди навів та клацнув гравець. А це означає, що нам потрібен спосіб перетворити двовимірну позицію курсора на екрані, на тривимірну позицію в просторі світу. І для цього існує певна процедура, яка сформує промінь від камери в напрямку курсору, та визначить позицію його зіткнення з фізичною поверхнею світу. Але про усе по порядку.&lt;/p&gt;
&lt;p&gt;До вузла &lt;code&gt;Main&lt;/code&gt; додаємо код. Тут відразу створюємо дві глобальні змінні, що зберігатимуть посилання на камеру та вузол персонажу:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-GDScript&#34; data-lang=&#34;GDScript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;onready&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;player&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;$Player&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;onready&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;camera&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;$CameraHolder/Camera&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Для обох цих змінних на початку вказано ключове слово &lt;code&gt;onready&lt;/code&gt;, що означає, що вміст цим змінним буде передано тільки після того, як пройшла уся потрібна ініціалізація, та вузли уже мають інформацію про одне одних.&lt;/p&gt;
&lt;p&gt;Більшість потрібних нам процесів в цім коді буде стосуватись функції &lt;code&gt;_input(event):&lt;/code&gt;, яка відповідає за опрацювання усього, що стосується засобів вводу. І перша така важлива подія, що нас цікавить, це натискання лівої клавіші мишки, тому пишемо:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-GDScript&#34; data-lang=&#34;GDScript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;_input&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;event&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;event&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;InputEventMouseButton&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;event&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;button_index&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;BUTTON_LEFT&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;event&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;is_pressed&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;k&#34;&gt;pass&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Це доволі довга і складна умова. Перш ніж пояснити її, маю зауважити особливість того, як сам &lt;code&gt;Godot&lt;/code&gt; опрацьовує подібні довгі умови. Якщо перша умова в послідовності, що з&amp;rsquo;єднана операторами &lt;code&gt;and&lt;/code&gt; не справдилась, то усі наступні ігноруються, оскільки сумарний результат умови уже буде рівним &lt;code&gt;false&lt;/code&gt;. В цьому випадку це важливо, тому що об&amp;rsquo;єкт &lt;code&gt;event&lt;/code&gt; може мати параметр &lt;code&gt;button_index&lt;/code&gt; тільки якщо перша умова справдилась, тобто, якщо це подія натискання клавіші миші.&lt;/p&gt;
&lt;p&gt;Тож, тут написано, що ми маємо справу з подією, що пов&amp;rsquo;язана з клавішами миші, індекс клавіші відповідає лівій, та що це подія саме натискання, а не відпускання.
Після того, як усі умови виконано, ми поки залишаємо порожню операцію. До цієї функції ми повернемось вже за кілька хвилин та доповнимо її. А поки, сам процес формування та обробку променя в напрямку курсора мишки ми описуємо в окремій функції:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-GDScript&#34; data-lang=&#34;GDScript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;get_mouse_collision_pos&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mouse_pos&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;camera&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;project_ray_origin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mouse_pos&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;camera&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;project_ray_normal&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mouse_pos&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;space_state&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;get_world&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;get_direct_space_state&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;results&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;space_state&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;intersect_ray&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;to&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;results&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;has&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;position&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;results&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;null&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Функція отримує двовимірну позицію курсора на екрані. Наступним рядком виконується метод &lt;code&gt;project_ray_origin&lt;/code&gt; із вузла камери. Цьому методу передається ота двовимірна позиція на екрані, а він із формує початкову точку, з якої буде пускатись промінь. Ця початкова точка записується з мінну &lt;code&gt;from&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Далі розраховується кінцева точка променя в напрямку курсора відносно камери на відстань 100 одиниць.&lt;/p&gt;
&lt;p&gt;Наступним рядком в змінну записується прямий доступ до простору фізичного сервера. Це дає нам можливість уже в наступному рядку прокласти промінь за визначеними нами точками до його зіткнення з поверхнею якогось з фізичних об&amp;rsquo;єктів сцени.&lt;/p&gt;
&lt;p&gt;Результати роботи фізичної системи записуються в словник, і якщо зіткнення справді відбулось, тоді в цьому словнику має бути ключ &lt;code&gt;position&lt;/code&gt;. Наявність цього ключа для нас і служить підтвердженням, що відбулось зіткнення і тоді увесь цей словник ми повертаємо з функції на подальшу обробку. Якщо ж такого ключа немає, тоді і зіткнення не було, а це означає, що ми повернемо &lt;code&gt;null&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Ну що ж, можемо знову повернутись до функції &lt;code&gt;_input(event)&lt;/code&gt;. По виконанню тієї умови, що ми уже маємо, додаємо ще кілька рядків, та розглянемо уважніше, що саме:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-GDScript&#34; data-lang=&#34;GDScript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mouse_coll_result&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;get_mouse_collision_pos&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;event&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;position&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mouse_coll_result&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;action_pos&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mouse_coll_result&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;position&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;interacted_object&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mouse_coll_result&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;collider&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Першим рядком ми в локальну змінну занесли результат виконання функції, котру тільки що описували.
Далі, якщо ця змінна не &lt;code&gt;null&lt;/code&gt;, а значить зіткнення відбулось і ми маємо словник з даними, тоді з результату витягуємо певні параметри.&lt;/p&gt;
&lt;p&gt;В змінну &lt;code&gt;action_pos&lt;/code&gt; записуємо 3-вимірну позицію де відбулось зіткнення.&lt;/p&gt;
&lt;p&gt;В змінну &lt;code&gt;interacted_object&lt;/code&gt; записуємо об&amp;rsquo;єкт, з яким відбулась взаємодія.&lt;/p&gt;
&lt;p&gt;Продовжуємо з функцією &lt;code&gt;_input(event)&lt;/code&gt; та додаємо ще кілька рядків:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-GDScript&#34; data-lang=&#34;GDScript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;nx&#34;&gt;$MousePosPointer&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;global_transform&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;origin&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;action_pos&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;nx&#34;&gt;$MousePosPointer/AnimationPlayer&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;stop&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;interacted_object&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;is_in_group&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;pickable&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;				&lt;span class=&#34;n&#34;&gt;player&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;walk_and_pickup_object&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;interacted_object&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;				&lt;span class=&#34;nx&#34;&gt;$MousePosPointer/AnimationPlayer&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;play&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;fade_item&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;				&lt;span class=&#34;n&#34;&gt;player&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;walk_to_point&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;action_pos&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;				&lt;span class=&#34;nx&#34;&gt;$MousePosPointer/AnimationPlayer&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;play&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;fade&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;У нас в сцені є об&amp;rsquo;єкт, який собою являє невеличку кулю. До цього об&amp;rsquo;єкта прикріплено вузол з двома анімаціями. Ця куля для нас служитиме ефектом, який відтворюватиметься в точці, на яку гравець клацнув. Тож, для початку ми переміщаємо вузол з кулею, тоді спиняємо для нього анімацію. Це для того, щоб анімація, яку ми зараз запустимо, почала відтворюватись з початку, а не продовжилась з тієї точки, на якій відтворювалась до цього.
А тепер ми маємо розгалуження. Пізніше ми додамо до сцени об&amp;rsquo;єкти, які гравець зможе піднімати. Це будуть грибочки. Тож нам потрібно буде для них виконувати відповідний метод з коду персонажу. А також для таких об&amp;rsquo;єктів буде відтворюватись трохи інша анімація. Куля для таких об&amp;rsquo;єктів буде зеленою.
Тож, якщо зіткнення променя відбулось з об&amp;rsquo;єктом з групи &lt;code&gt;pickable&lt;/code&gt;, тобто, той, якого можна підняти, тоді для гравця виконується метод &lt;code&gt;walk_and_pickup_object(obj)&lt;/code&gt;, якій передається об&amp;rsquo;єкт, для піднімання.&lt;/p&gt;
&lt;p&gt;Якщо ж ми клацнули на щось, що не можна підняти, тоді викликається метод &lt;code&gt;wakt_to_point(point)&lt;/code&gt;. Цей метод лише отримує позицію в просторі, та направляє туди персонажа. Ну і, звичайно, викликається відповідна анімація для кулі.&lt;/p&gt;
&lt;p&gt;Зараз ви уже можете запустити і спробувати, як відбувається переміщення персонажу по сцені. Але поки за ним не рухається камера. І це ми виправимо в наступному розділі.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>3. Рух камери</title>
        <link>http://localhost:1313/docs/godot/mushroom_forest/030_camera_movement/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/docs/godot/mushroom_forest/030_camera_movement/</guid>
        <description>&lt;h1 id=&#34;рух-камери&#34;&gt;Рух камери
&lt;/h1&gt;&lt;hr&gt;
&lt;p&gt;Рух камери в цій грі матиме свої особливості. Камера рухатиметься за гравцем, її можна буде опустити та підняти, при цьому вона повинна постійно тримати персонажа по центру. Але ми не реалізуємо її обертання, так що погляд гравця буде лише з одного ракурсу.&lt;/p&gt;
&lt;p&gt;З переміщенням за персонажем усе насправді дуже просто і ми для цього уже маємо усе необхідне. Але це все ж потребує пояснення. Традиційно, якщо ми хочемо, щоб два об&amp;rsquo;єкти рухались разом, тоді нам потрібно помістити один з них як дочірній іншого. Але є і інший спосіб і цей спосіб реалізовано засобами вузла класу &lt;code&gt;RemoteTransform&lt;/code&gt;. Відкрийте сцену гравця, і ви побачите внизу списку вузол з назвою &lt;code&gt;CameraMover&lt;/code&gt;. Цей вузол має параметр &lt;code&gt;RemotePath&lt;/code&gt;, тобто, шлях до вузла, який треба переміщувати. Якщо цей шлях вказано, тоді цей вузол в кожному кадрі гри буде виконувати переміщення, розвертання та масштабування потрібного вузла. Також нижче в інспекторі є можливість вимкнути вплив на якісь з цих параметрів. Як ви можете побачити, в нашому випадку цей вузол буде впливати лише на позицію.&lt;/p&gt;
&lt;p&gt;Тепер заглянемо в код гравця. Тут вгорі є ось такий рядок:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-gdscript3&#34; data-lang=&#34;gdscript3&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;ne&#34;&gt;NodePath&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;camera_holder_path&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Перше ключове слово вказує, що цей параметр має бути доступний з інспектору. Далі в дужках вказується який саме тип матиме ця змінна. Для змінних, що відображаються в інспекторі важливо якимось чином визначитись з типом даних, інакше &lt;code&gt;Godot&lt;/code&gt; не знатиме, як його представити на панелі. Тож, цей тип, це шлях до вузла. В інспекторі він відображається в форму кнопки &lt;code&gt;Assign&lt;/code&gt;, по натисканню на яку вам дають можливість обрати один з вузлів зі сцени.&lt;/p&gt;
&lt;p&gt;Тож, повернемось до сцени &lt;code&gt;Main&lt;/code&gt;, виділяємо вузол &lt;code&gt;Player&lt;/code&gt; та для параметру &lt;code&gt;Camera Holder Path&lt;/code&gt; натискаємо &lt;code&gt;Assign&lt;/code&gt; та обираємо вузол &lt;code&gt;CameraHolder&lt;/code&gt;.
Оскільки камера є дочірньою до вузла &lt;code&gt;CameraHolder&lt;/code&gt;, тому якщо зараз запустити гру, камера буде слідувати за гравцем.&lt;/p&gt;
&lt;p&gt;Наступне, що ми зробимо, це реалізуємо можливість опускати та піднімати камеру. Але перед тим, нам потрібно налаштувати кілька подій вводу. Переходимо в &lt;code&gt;Project&lt;/code&gt; -&amp;gt; &lt;code&gt;Project Settings&lt;/code&gt; та на вкладку &lt;code&gt;Input Map&lt;/code&gt;. Тут додаємо дві події:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;camera_up&lt;/code&gt; - &lt;code&gt;Mouse Button&lt;/code&gt; -&amp;gt; &lt;code&gt;Wheel Up Button&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;camera_down&lt;/code&gt; - &lt;code&gt;Mouse Button&lt;/code&gt; -&amp;gt; &lt;code&gt;Wheel Down Button&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Тепер повернемось до сцени &lt;code&gt;Main&lt;/code&gt; та знайдемо вузол &lt;code&gt;Camera&lt;/code&gt;. До нього додаємо новий код. Але будьте уважні. Не рекомендується використовувати для вашого коду назви, які мають вбудовані класи &lt;code&gt;Godot&lt;/code&gt;. Тому файл з кодом для камери ми назвемо &lt;code&gt;CameraControl&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Тут спочатку оголосимо кілька глобальних змінних та констант:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-GDScript&#34; data-lang=&#34;GDScript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;onready&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;main_node&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;get_tree&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;get_root&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;get_node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Main&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;MIN_Y_POS&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;13.0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;MAX_Y_POS&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;0.0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y_step&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;1.0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Перша змінна - це посилання на головний вузол сцени.&lt;/p&gt;
&lt;p&gt;Далі дві константи, що визначають максимальну та мінімальну висоту для камери.
І остання змінна, це крок зміщення камери.&lt;/p&gt;
&lt;p&gt;Далі створимо функцію, що і буде виконувати переміщення:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-GDScript&#34; data-lang=&#34;GDScript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;move_camera&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;n&#34;&gt;transform&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;origin&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;clamp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;transform&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;origin&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;MIN_Y_POS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;MAX_Y_POS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;nf&#34;&gt;look_at&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;main_node&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;player&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;global_transform&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;origin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Vector3&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;UP&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Тут ми маємо власне зміну позиції по осі &lt;code&gt;y&lt;/code&gt;, тобто, вертикалі. Переміщення обмежене функцією &lt;code&gt;clamp&lt;/code&gt;, якій ми передаємо ті константи, котрі щойно створили.
Далі ми викликаємо метод &lt;code&gt;look_at&lt;/code&gt;, що дослівно перекладається як &lt;code&gt;подивись на&lt;/code&gt;. Тобто, ми вказуємо камері, щоб вона подивилась в напрямку певного об&amp;rsquo;єкту. І позицію цього об&amp;rsquo;єкту ми дізнаємось у вузла &lt;code&gt;Main&lt;/code&gt;. Там ми зберегли посилання на гравця в змінну &lt;code&gt;player&lt;/code&gt;, тож зараз просто користуємось цією зручністю. Також цій функції потрібно передати, що саме є напрямком вгору. В нашому випадку, це і є вектор вгору.&lt;/p&gt;
&lt;p&gt;Далі формуємо виклики цієї функції в &lt;code&gt;_input(event)&lt;/code&gt; по відповідним подіям:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-GDScript&#34; data-lang=&#34;GDScript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;_input&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;event&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;event&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;is_action_pressed&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;camera_up&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;nf&#34;&gt;move_camera&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y_step&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;elif&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;event&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;is_action_pressed&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;camera_down&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;nf&#34;&gt;move_camera&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y_step&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Можете повернутись до гри та спробувати крутити колесо мишки.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>4. Анімований персонаж</title>
        <link>http://localhost:1313/docs/godot/mushroom_forest/040_animated_character/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/docs/godot/mushroom_forest/040_animated_character/</guid>
        <description>&lt;h1 id=&#34;анімований-персонаж&#34;&gt;Анімований персонаж
&lt;/h1&gt;&lt;hr&gt;
&lt;p&gt;Для цієї гри я трохи відредагував модель аватара, якого робив для VR-гри. Тому не дивуйтесь, що він без рук і без ніг. На його прикладі ми розглянемо, як імпортується та під&amp;rsquo;єднується модель з анімацією.&lt;/p&gt;
&lt;p&gt;Найкращим форматом 3-вимірних моделей, для &lt;code&gt;Godot&lt;/code&gt; є &lt;code&gt;glTF&lt;/code&gt;. Це новітній формат, що являється стандартом для 3-вимірних сцен та об&amp;rsquo;єктів, який прийнятий в 2015 організацією &lt;code&gt;Khronos Group&lt;/code&gt;. Цей файловий формат являється відкритим, тобто, уся його специфікація доступна та детально документована.
&lt;code&gt;Godot&lt;/code&gt; також підтримує &lt;code&gt;FBX&lt;/code&gt;, але я його використання не раджу.&lt;/p&gt;
&lt;p&gt;Тож, &lt;code&gt;glTF&lt;/code&gt; підтримує усе для нас необхідне, включаючи матеріали та анімацію.
Після того, як модель додано до каталогу з проектом, розпочинається його автоматичне імпортування. Є багато параметрів та особливостей цього процесу, які можна налаштувати на панелі &lt;code&gt;Import&lt;/code&gt;. Але ми поки скористаємось значеннями за замовчуванням.&lt;/p&gt;
&lt;p&gt;Розглянемо це усе на прикладі моделі персонажу, що розташована в каталозі &lt;code&gt;models/characters&lt;/code&gt;.
Сама модель міститься у файлі &lt;code&gt;walker.glb&lt;/code&gt;. В процесі імпортування усі матеріали з цього файлу формуються в окремі файли, що дає нам можливість відкоригувати їх в подальшому.&lt;/p&gt;
&lt;p&gt;Спробуйте відкрити файл &lt;code&gt;walker.glb&lt;/code&gt; і перед вами з&amp;rsquo;явиться вікно, яке дає один з 3 варіантів вибору:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Cancel&lt;/code&gt; - відміна відкривання;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Open Anyway&lt;/code&gt; - усе таки відкрити. Але цей варіант не рекомендований.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;New Inherited&lt;/code&gt; - що створить новий наслідуваний файл.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;В цьому новому файлі є кореневий що належить до класу &lt;code&gt;Spatial&lt;/code&gt;. Але ви можете змінити його тип та назву. А от усі інші елементи підписані сірим. Це означає, що ви не можете їх редагувати. Вони наслідувані і будуть оновлюватись кожен раз, коли ви, або хто інший, оновить оригінальний файл.&lt;/p&gt;
&lt;p&gt;Тільки от деякі зміни нам усе ще потрібно зробити. І їх ми робитимемо з коду. Тому, перше, це збережемо цей файл, який перед нами. І збережемо його в той же каталог - &lt;code&gt;models/characters&lt;/code&gt;. А після цього для кореневого вузла створимо новий код. Там потрібно додати такі строки:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-GDScript&#34; data-lang=&#34;GDScript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;_ready&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;nx&#34;&gt;$AnimationPlayer&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;get_animation&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;idle&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;loop&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;nx&#34;&gt;$AnimationPlayer&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;get_animation&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;walk&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;loop&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;nx&#34;&gt;$AnimationPlayer&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;play&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;idle&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;play_animation&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;animation_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;nx&#34;&gt;$AnimationPlayer&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;play&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;animation_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Тут в функції &lt;code&gt;_ready()&lt;/code&gt; ми вносимо певні налаштування в анімації. Оскільки ми можемо внести ці зміни з редактора, бо вони не збережуться, тому, для обох наявних анімацій ми вмикаємо циклічність. А тоді анімацію &lt;code&gt;idle&lt;/code&gt; відразу запускаємо на відтворення.&lt;/p&gt;
&lt;p&gt;Також тут є функція &lt;code&gt;play_animation(animation_name)&lt;/code&gt;, яка лише перенаправляє команду по відтворенню анімації до вузла &lt;code&gt;AnimationPlayer&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Після цих змін відкриємо сцену гравця (&lt;code&gt;objects/TopDownPlayer.tscn&lt;/code&gt;). Гравець поки відображався у вигляді зеленої капсули та червоного паралелепіпеда. Для цих об&amp;rsquo;єктів ми можемо вимкнути відображення, натиснувши кнопку з значком ока навпроти їх імен. Тоді додамо до кореневого вузла нашу сцену &lt;code&gt;walker.tscn&lt;/code&gt;. Цей анімований персонаж розташований трохи занизько та повернений не в ту сторону. Тому розвернемо його на 180 градусів по осі &lt;code&gt;y&lt;/code&gt; та піднімемо трохи вище. Зараз можете запустити та спробувати. Персонаж уже має відтворювати анімацію відповідно до того стоїть він на місці, чи іде кудись. Для того щоб зрозуміти яким чином це контролюється, поглянемо в код гравця.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>5. Піднімання предметів</title>
        <link>http://localhost:1313/docs/godot/mushroom_forest/050_pickable/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/docs/godot/mushroom_forest/050_pickable/</guid>
        <description>&lt;h1 id=&#34;піднімання-предметів&#34;&gt;Піднімання предметів
&lt;/h1&gt;&lt;hr&gt;
&lt;p&gt;Наша гра передбачає збирання предметів, що ростуть або попадали по лісу. Тому нам потрібен спосіб збирати дані про ці предмети та якась процедура їх піднімання.&lt;/p&gt;
&lt;p&gt;Об&amp;rsquo;єкт, яки зберігатиме дані про підняті предмети ми реалізуємо в наступному розділі. А поки розглянемо самі предмети.&lt;/p&gt;
&lt;p&gt;Для початку створимо певну структуру в сцені &lt;code&gt;Main&lt;/code&gt;. До вузла &lt;code&gt;Main&lt;/code&gt; додамо новий &lt;code&gt;Spatial&lt;/code&gt; та перейменуємо його на &lt;code&gt;Interactables&lt;/code&gt;. Сюди будуть поміщатись усілякі об&amp;rsquo;єкти, з якими гравець може взаємодіяти. Зокрема ті, які ми можемо піднімати. Але їх ми виділимо ще в окремий об&amp;rsquo;єкт. Тому, до вузла &lt;code&gt;Interactables&lt;/code&gt; додаємо ще один &lt;code&gt;Spatial&lt;/code&gt; і його називаємо &lt;code&gt;Pickables&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Нам потрібно реалізувати еталонний клас об&amp;rsquo;єктів, які можна підняти. На основі нього ми створимо класи для різних предметів, що мають якусь свою специфіку. Тому, до вузла &lt;code&gt;Pickables&lt;/code&gt; додаємо новий вузол класу &lt;code&gt;KinematicBody&lt;/code&gt;. Його перейменовуємо на &lt;code&gt;Pickable&lt;/code&gt;. До нього додаємо &lt;code&gt;CollisionShape&lt;/code&gt; та &lt;code&gt;MeshInstance&lt;/code&gt;. Для кожного обираємо форму кулі. Можете також змінити матеріал для &lt;code&gt;MeshInstance&lt;/code&gt;. Це буде лише еталонна реалізація, тому ні форма ні розміри його нам поки не критичні.&lt;/p&gt;
&lt;p&gt;Щоб наш задум працював коректно, усі об&amp;rsquo;єкти, які можна піднімати, повинні бути в групі &lt;code&gt;pickable&lt;/code&gt; (з малої літери). Тому, виділяємо ще раз об&amp;rsquo;єкт &lt;code&gt;Pickable&lt;/code&gt;, на правій панелі перемикаємось на &lt;code&gt;Node&lt;/code&gt;, а там на &lt;code&gt;Groups&lt;/code&gt;. Створюємо для цього об&amp;rsquo;єкту групу &lt;code&gt;pickable&lt;/code&gt; та натискаємо &lt;code&gt;Add&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Тепер збережемо цей об&amp;rsquo;єкт як окрему сцену. Для цього натискаємо на його ім&amp;rsquo;я в ієрархії правою клавішею, тоді шукаємо &lt;code&gt;Save Branch as Scene&lt;/code&gt;, та зберігаємо в каталог &lt;code&gt;Objects&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Відкрийте новостворену сцену &lt;code&gt;Pickable.tscn&lt;/code&gt; на редагування просто натиснувши на значок кіно-хлопавки навпроти імені об&amp;rsquo;єкта.&lt;/p&gt;
&lt;p&gt;Цей вузол потребує свій власний код. Тому, в сцені &lt;code&gt;Pickable.tscn&lt;/code&gt; для вузла &lt;code&gt;Pickable&lt;/code&gt; додаємо новий код. Тут має бути щось таке:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-GDScript&#34; data-lang=&#34;GDScript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;item_name&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;amount&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;get_item_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;item_name&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;get_amount&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;amount&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;get_stats&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;item_name&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;item_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;amount&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;amount&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Маємо дві глобальні змінні. При чому обидві мають ключове слово &lt;code&gt;export&lt;/code&gt; попереду. А воно означає, що ці змінні доступні для редагування з інспектору.&lt;/p&gt;
&lt;p&gt;Перша змінна буде містити ім&amp;rsquo;я об&amp;rsquo;єкту. Це може бути &lt;code&gt;Apple&lt;/code&gt;, &lt;code&gt;Mushroom&lt;/code&gt;, &lt;code&gt;Branch&lt;/code&gt; чи що завгодно інше.
Друга змінна міститиме кількість таких об&amp;rsquo;єктів, що містяться в цьому одному. Наприклад, у нас буде модель, що містить 3 грибочки. Тож, після піднімання такого предмету у гравця повинно додатись до інвентарю 3 одиниці цього предмету.&lt;/p&gt;
&lt;p&gt;Далі ми маємо функцію, &lt;code&gt;get_item_name()&lt;/code&gt;, яка повертає оте саме ім&amp;rsquo;я, та функцію &lt;code&gt;get_amount()&lt;/code&gt; що повертає кількість.&lt;/p&gt;
&lt;p&gt;Далі є функція &lt;code&gt;get_stats()&lt;/code&gt; і вона збирає усі необхідні дані про об&amp;rsquo;єкт в єдиний словник та повертає їх. Різні предмети можуть мати різний набір важливих параметрів. І при потребі ми зможемо для них реалізувати свою версію цієї функції.&lt;/p&gt;
&lt;p&gt;У нас уже є частина коду, для роботи з предметами, які можна піднімати. Хоча власне підняти ми поки усе ще не зможемо. Це тому, що обробку та зберігання даних про ці події буде робити окремий вузол зі своїм кодом. А поки, по натисканню на нашу кулю спалахує зелененька кулька, що інформує про те, що надіслана команда підняти. Також персонаж підходить до цієї кулі і навіть проходить крізь. Про те, чому він проходить, як це працює і як цим користуватись на нашу користь, ми теж поговоримо трохи пізніше.&lt;/p&gt;
&lt;p&gt;Тож, до завершення цього розділу зробимо ще дещо цікаве. Ми уже маємо можливість витягнути інформацію про предмет. Тож зробимо так, щоб коли мишку наведено на нього, ця інформація виводилась в одне з текстових полів на екрані.&lt;/p&gt;
&lt;p&gt;Для цього повернемось до сцени &lt;code&gt;Main&lt;/code&gt; та до коду вузла &lt;code&gt;Main&lt;/code&gt;. Створимо тут нову функцію, робота якої і буде полягати в відображенні даних про об&amp;rsquo;єкти:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-GDScript&#34; data-lang=&#34;GDScript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;interactable_data_view&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Dictionary&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;info_text&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;k&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;keys&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;n&#34;&gt;info_text&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;[&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;k&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;: &amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;k&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;] &amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;nx&#34;&gt;$UI/Info&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;text&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;info_text&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Як ви можете бачити, функція прийматиме на як параметр словник. Така форма запису, коли після назви змінної через дві крапки стоїть назва типу чи класу змінної, це допустима форма. Ви можете в будь якому місці робити подібну форму оголошення. Таким чином ви підказуєте інтерпретатору, який саме тип буде використано. Це дає дві переваги. По перше, &lt;code&gt;Godot&lt;/code&gt; знатиме, який тип очікується, і якщо ви спробуєте передати щось інше, то він вас попередить про помилку. По друге, оскільки &lt;code&gt;Godot&lt;/code&gt; тепер знатиме, що саме має міститись в цій змінній, система авто-доповнення працюватиме так як слід і підказуватиме вам методи і параметри з цього класу, що має полегшити вашу роботу.&lt;/p&gt;
&lt;p&gt;Тож, функція отримує словник з даними про об&amp;rsquo;єкт, який нас цікавить. Цей словник ми можемо отримувати за допомогою методу &lt;code&gt;get_stats()&lt;/code&gt; з класу &lt;code&gt;Pickable&lt;/code&gt;, який ми щойно описали.
Далі формується порожня строкова змінна. Потім циклом проходимось по усім ключам словника, та виводимо усі ключі та дані в нашу строкову змінну. А по завершенню наповнення змінної даними, цей текст передається вузлу &lt;code&gt;Info&lt;/code&gt;, який є об&amp;rsquo;єктом класу &lt;code&gt;Lable&lt;/code&gt;, тобто, елемент інтерфейсу, що може виводити текст.&lt;/p&gt;
&lt;p&gt;Щоб усе це працювало, нам усе ще потрібні дані для виводу. Ми уже маємо об&amp;rsquo;єкт &lt;code&gt;Pickable&lt;/code&gt; в сцені і у нього є відповідні комірки. Але ми усе ще не дали йому назву. Тому виділяємо вузол &lt;code&gt;Pickable&lt;/code&gt; та в інспекторі вгорі знаходимо створений нами параметр &lt;code&gt;Item Name&lt;/code&gt;. Записуємо сюди, наприклад, &lt;code&gt;Apple&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Далі нам треба подія, по якій ми будемо виводити цю інформацію. Такою подією ми оберемо момент, коли гравець наводить мишку на цей об&amp;rsquo;єкт. Тому повертаємось до коду вузла &lt;code&gt;Main&lt;/code&gt; та до функції &lt;code&gt;_input(event)&lt;/code&gt;. Тут у нас уже є опрацювання події натискання лівої клавіші мишки. Додамо ще подію просто руху мишки, де також отримаємо позицію в просторі, куди саме вона вказує. Тож, додаємо в кінець функції &lt;code&gt;_input(event)&lt;/code&gt; такі рядки:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-GDScript&#34; data-lang=&#34;GDScript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;event&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;InputEventMouseMotion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mouse_coll_result&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;get_mouse_collision_pos&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;event&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;position&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mouse_coll_result&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;int_object&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mouse_coll_result&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;collider&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;int_object&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;is_in_group&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;interactable&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;				&lt;span class=&#34;nf&#34;&gt;interactable_data_view&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;int_object&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;get_stats&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;k&#34;&gt;elif&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;int_object&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;is_in_group&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;pickable&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;				&lt;span class=&#34;nf&#34;&gt;interactable_data_view&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;int_object&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;get_stats&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;				&lt;span class=&#34;nf&#34;&gt;interactable_data_view&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({})&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Тут ми маємо перевірку, чи це подія руху мишки. Якщо це так, подібно до того, як робили з натисканням лівої клавіші, викликаємо функцію, яка пускає промінь до зіткнення з поверхнею і цій функції передаємо позицію курсору. Якщо дані про зіткнення дійсні, тоді з них виймаємо в локальну змінну об&amp;rsquo;єкт, з яким відбулось зіткнення. Далі, якщо цей об&amp;rsquo;єкт належить до групи &lt;code&gt;interactable&lt;/code&gt; викликаємо відповідну процедуру для нього. Про &lt;code&gt;interactable&lt;/code&gt; об&amp;rsquo;єкти ми поговоримо пізніше.
А ось наступне, це те що нас цікавить саме зараз. Якщо об&amp;rsquo;єкт належить до групи &lt;code&gt;piackable&lt;/code&gt;, тоді робимо для нього запит на отримання статусу (даних про нього), та передаємо результат функції відображення. І для усіх інших випадків передаємо функції відображення порожній словник. Це лише для того, щоб дані на екрані витирались, коли ми відведемо мишку.&lt;/p&gt;
&lt;p&gt;Спробуйте зараз гру. Коли ви наведете на нашу кулю, внизу екрану має з&amp;rsquo;явитись інформація про неї.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>6. Інвентар</title>
        <link>http://localhost:1313/docs/godot/mushroom_forest/060_store_picked/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/docs/godot/mushroom_forest/060_store_picked/</guid>
        <description>&lt;h1 id=&#34;інвентар-гравця&#34;&gt;Інвентар гравця.
&lt;/h1&gt;&lt;hr&gt;
&lt;p&gt;Ми уже маємо базу для об&amp;rsquo;єктів, які можна піднімати, але немає поки засобів зберігати та обробляти дані про підняті гравцем об&amp;rsquo;єкти. Тож, давайте створимо щось подібне.&lt;/p&gt;
&lt;p&gt;Вузол, котрий триматиме усю інформацію про інвентар гравця буде окремим та незалежним від самого гравця. Тож, до вузла &lt;code&gt;Main&lt;/code&gt; додамо новий вузол класу &lt;code&gt;Spatial&lt;/code&gt;. Його перейменуємо на &lt;code&gt;ItemHolder&lt;/code&gt;. До нього відразу додаємо новий порожній сценарій. Тут оголосимо кілька глобальних змінних:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-GDScript&#34; data-lang=&#34;GDScript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;onready&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;main_node&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;get_tree&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;get_root&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;get_node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Main&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;items&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;money&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Перша змінна - це посилання на головний вузол сцени. Далі ми маємо словник, який міститиме назви та кількість об&amp;rsquo;єктів, якими володіє гравець.&lt;/p&gt;
&lt;p&gt;І остання змінна, це кількість грошей, які здобув гравець. Поки це число дорівнює нулю.&lt;/p&gt;
&lt;p&gt;Далі ще на хвилинку повернемось до коду вузла &lt;code&gt;Main&lt;/code&gt;. Тут додамо нову функцію:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-GDScript&#34; data-lang=&#34;GDScript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;update_item_view&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;money&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;items&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;item_view_str&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;money: &amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;money&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;  &amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;k&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;items&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;keys&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;n&#34;&gt;item_view_str&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;[&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;k&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;]: &amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;items&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;k&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;nx&#34;&gt;$UI/ItemView&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;text&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;item_view_str&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Ця функція отримує кількість грошей та словник інвентарю персонажа. Далі функція усі ці дані формує с строку та передає на відображення вузлу &lt;code&gt;ItemView&lt;/code&gt;, який також є елементом класу &lt;code&gt;Lable&lt;/code&gt; та знаходиться внизу екрану, поряд з іншим.&lt;/p&gt;
&lt;p&gt;Тепер, коли ми маємо можливість відображати дані інвентарю, знову повертаємось до коду вузла &lt;code&gt;ItemHolder&lt;/code&gt;. Тут ми створимо цілий ряд функцій для піднімання, викидання, купівлі та продажу предметів. Але ще перед тим додамо одну маленьку функцію, що буде викликати метод &lt;code&gt;update_item_view(money, items)&lt;/code&gt; вузла &lt;code&gt;Main&lt;/code&gt; на відображення усіх цих даних:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-GDScript&#34; data-lang=&#34;GDScript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;update_item_view&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;n&#34;&gt;main_node&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;update_item_view&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;money&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;items&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Далі додамо функцію купівлі предмета:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-GDScript&#34; data-lang=&#34;GDScript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;item_purchased&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;item_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;price&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;amount&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;money&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;price&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;amount&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;n&#34;&gt;money&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;price&lt;/span&gt;	&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;amount&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;items&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;has&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;item_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;n&#34;&gt;items&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;item_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;amount&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;n&#34;&gt;items&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;item_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;amount&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;n&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;n&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;nf&#34;&gt;update_item_view&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Ця функція приймає як параметри ім&amp;rsquo;я об&amp;rsquo;єкту, який потрібно купити, по якій ціні та яку кількість. Далі функція визначає, чи має гравець достатньо коштів. Якщо ні, інвентар не змінюється, та функція повертає значення &lt;code&gt;false&lt;/code&gt;, тобто, купівля не успішна. Якщо ж коштів достатньо, тоді від наявної суми віднімається потрібна, та в словник інвентарю додається відповідних запис про кількість предметів.&lt;/p&gt;
&lt;p&gt;Наступною додамо функцію продажу предметів:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-GDScript&#34; data-lang=&#34;GDScript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;item_sell&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;item_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;price&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;amount&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;items&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;has&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;item_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;items&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;item_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;amount&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;n&#34;&gt;items&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;item_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;amount&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;n&#34;&gt;money&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;price&lt;/span&gt;	&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;amount&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;n&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;n&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;nf&#34;&gt;update_item_view&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Тут так само, приймаємо назву об&amp;rsquo;єкта, який хочемо продати, ціну за один об&amp;rsquo;єкт, та кількість. Тоді визначаємо, чи є у гравця такі об&amp;rsquo;єкти в необхідній кількості. Якщо так, нараховуємо кошти та віднімаємо предмети. При успішній операції функція повертає &lt;code&gt;true&lt;/code&gt;. Якщо ж операція з якоїсь причини не успішна, повертаємо &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Тепер коли ми маємо функції купівлі та продажу, на їх основі створимо функції піднімання на викидання. Будемо ці процеси вважати такими ж купівлею та продажем, тільки з нульовою сумою. Тому отримуємо такі дві функції:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-GDScript&#34; data-lang=&#34;GDScript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;item_pickup&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;item_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;amount&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;item_purchased&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;item_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;amount&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;nf&#34;&gt;update_item_view&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;item_drop&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;item_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;amount&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;item_sell&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;item_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;amount&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;nf&#34;&gt;update_item_view&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;У нас уже майже усе готово, щоб успішно підняти предмет. Але перед тим, як зробити останню необхідну дію, заглянемо на хвилинку в код гравця. Тут є функція &lt;code&gt;object_pickup(obj)&lt;/code&gt;. Вона викликається, якщо гравцю попередньо надіслано команду підійти та підняти предмет, і коли персонаж уже підійшов на достатньо близьку відстань. І першими ж рядками коду ми маємо:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	if !is_instance_valid(item_holder):
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		return
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;В коді гравця вгорі є сформована змінна &lt;code&gt;item_holder&lt;/code&gt;. Вона повинна містити посилання на об&amp;rsquo;єкт &lt;code&gt;ItemHolder&lt;/code&gt;, над кодом якого ми щойно працювали. Якщо ж такого посилання немає, тоді уся функція піднімання ігнорується.&lt;/p&gt;
&lt;p&gt;Але якщо змінна містить коректне посилання на об&amp;rsquo;єкт &lt;code&gt;ItemHolder&lt;/code&gt;, тоді виконується увесь потрібний процес та викликається відповідна функція на запис про піднятий об&amp;rsquo;єкт. Є ще одна маленька дрібниця. В цій функції &lt;code&gt;object_pickup(obj)&lt;/code&gt; вузла &lt;code&gt;Player&lt;/code&gt; є стрічка, яка намагатиметься викликати функцію генерації ефекту з вузла &lt;code&gt;Main&lt;/code&gt;. Але ми поки не маємо ні такої функції ні самого ефекту. Тому ще раз повертаємось до вузла &lt;code&gt;Main&lt;/code&gt; та до його коду, та додаємо поки що порожню функцію, яка пізніше буде доповнена генерацією потрібних ефектів.&lt;/p&gt;
&lt;p&gt;Тож, функція поки виглядатиме таким чином:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-GDScript&#34; data-lang=&#34;GDScript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;spawn_effect&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;effect_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pos&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;pass&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Тепер, на завершення цього розділу, виділяємо в сцені &lt;code&gt;Main&lt;/code&gt; вузол &lt;code&gt;Player&lt;/code&gt;, та в інспекторі для нього вгорі шукаємо параметр &lt;code&gt;Item Holder Path&lt;/code&gt;. Натискаємо на &lt;code&gt;Assign&lt;/code&gt; навпроти імені параметру, на назначаємо вузол &lt;code&gt;ItemHolder&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Тепер, якщо ви запустите гру та натиснете на кулю, гравець підійде до неї, та коли він вже буде дуже близько, кулі має зникнути, і внизу в стрічці, що відображає інвентар, має з&amp;rsquo;явитись новий запис. Так що, предмет піднято і записано в інвентар гравцю.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>7. Ефекти та звуки</title>
        <link>http://localhost:1313/docs/godot/mushroom_forest/070_effect_spawner/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/docs/godot/mushroom_forest/070_effect_spawner/</guid>
        <description>&lt;h1 id=&#34;ефекти-та-звуки&#34;&gt;Ефекти та звуки
&lt;/h1&gt;&lt;hr&gt;
&lt;p&gt;В цьому розділі ми побудуємо систему, що дозволить легко додавати та викликати різноманітні ефекти. І прикладом ефектів для нас будуть звуки, які будуть відтворюватись на піднімання.&lt;/p&gt;
&lt;p&gt;Звуки можна відтворювати та організовувати по різному. Якісь можна прикріпити до предмету, та викликати їх відтворення за необхідністю. Але для якихось, на момент, коли нам потрібно їх відтворити, предмету може уже не буди в сцені. Це саме наш випадок. Нам потрібно відтворити звук на піднімання. Але об&amp;rsquo;єкт, який піднімається, на цей момент уже видалено зі сцени. Тому організуємо ми це таким чином&amp;hellip; Ми створимо каталок, в якому зберігатимемо маленькі сцени, кожна з яких має якийсь ефект. Це може бути все той же звук, чи сплеск частинок, чи якийсь анімований предмет. Головна їх усіх особливість буде в тому. що існуватимуть вони короткий час, а після цього самостійно видалятимуться зі сцени.&lt;/p&gt;
&lt;p&gt;Для виклику цих ефектів та додаванню їх в сцену у відповідну позицію, ми додамо окремий вузол, так щоб усе було організовано та зрозуміло. Тож, до вузла &lt;code&gt;Main&lt;/code&gt; додамо новий вузол &lt;code&gt;Spatial&lt;/code&gt; та відразу перейменуємо його на &lt;code&gt;EffectSpawner&lt;/code&gt;. Для нього створимо порожній сценарій.&lt;/p&gt;
&lt;p&gt;Створюємо ось таку одну функцію:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-GDScript&#34; data-lang=&#34;GDScript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;spawn_effect&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;effect_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pos&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;effect_file_path&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;res://effects/&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;effect_name&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;.tscn&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;effect_file&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;load&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;effect_file_path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;effect&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;effect_file&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;instance&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;nf&#34;&gt;add_child&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;effect&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;n&#34;&gt;effect&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;global_transform&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;origin&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pos&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Ця функція приймає як параметр ім&amp;rsquo;я ефекту, який потрібно додати, та позицію, куди саме. Сама функція формує адресу файлу з ефектом. Усі ефекти повинні бути в каталозі &lt;code&gt;effects&lt;/code&gt;, щоб це працювало. Далі по коду створюється екземпляр файлу ефекту в сцені, додається як дочірній до самого вузла &lt;code&gt;EffectSpawner&lt;/code&gt; та його позиція змінюється на ту, яку передано функції.&lt;/p&gt;
&lt;p&gt;Оскільки цей об&amp;rsquo;єкт не є на пряму доступний звідусіль, тому в коді вузла &lt;code&gt;Main&lt;/code&gt; ми матимемо проміжну функцію. Вузол &lt;code&gt;Main&lt;/code&gt; легко доступний усім в сцені, тож, він буде ретранслювати цю команду по формуванню ефектів. І ми уже навіть маємо потрібну функцію, тільки вона поки порожня. Тому, переходимо до коду вузла &lt;code&gt;Main&lt;/code&gt;. Тут шукаємо функцію &lt;code&gt;spawn_effect(effect_name, pos)&lt;/code&gt;, та дописуємо її, щоб вона виглядала таким чином:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-GDScript&#34; data-lang=&#34;GDScript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;spawn_effect&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;effect_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pos&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;nx&#34;&gt;$EffectSpawner&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;spawn_effect&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;effect_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pos&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Тепер потрібно створити кілька ефектів. Поки обидва ефекти, що ми створимо, будуть викликати злегка різні звукові файли.&lt;/p&gt;
&lt;p&gt;Створимо нову сцену &lt;code&gt;3D Scene&lt;/code&gt;. Кореневий вузол перейменуємо на &lt;code&gt;pop&lt;/code&gt;. Додамо до нього код, але вкажемо назву &lt;code&gt;Effect.gd&lt;/code&gt;. Код цей буде узагальнений для більшості ефектів. Сцену зберігаємо в &lt;code&gt;effects&lt;/code&gt; під назвою &lt;code&gt;pop.tscn&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;До вузла &lt;code&gt;pop&lt;/code&gt; додаємо таймер. Для нього в інспекторі налаштовуємо &lt;code&gt;Wait Time&lt;/code&gt; на значення &lt;code&gt;3&lt;/code&gt;. Тоді відмічаємо обидві галочки &lt;code&gt;One Shot&lt;/code&gt; та &lt;code&gt;Autostart&lt;/code&gt;. Сигнал від таймера під&amp;rsquo;єднуємо до вузла &lt;code&gt;pop&lt;/code&gt; та в функції, що утворилась пишемо:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-GDScript&#34; data-lang=&#34;GDScript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;_on_Timer_timeout&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;nf&#34;&gt;queue_free&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Тож, цей таймер ми маємо для того, щоб через визначений час видалити вузол ефекту зі сцени. якщо цього не робити, таких вузлів буде ставати усе більше і більше, та рано чи пізно, вони переповнять оперативну пам&amp;rsquo;ять своїми даними.&lt;/p&gt;
&lt;p&gt;Також на початку коду &lt;code&gt;Effect.gd&lt;/code&gt; додамо дві глобальні змінні:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-GDScript&#34; data-lang=&#34;GDScript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;offset_time_max&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;0.5&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pitch_offset&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;0.5&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Наступне що ми зробимо, це до вузла &lt;code&gt;pop&lt;/code&gt; додамо новий &lt;code&gt;AudioStreamPlayer3D&lt;/code&gt;. До нього в інспекторі в параметр &lt;code&gt;Stream&lt;/code&gt; втягуємо звуковий файл, що розміщений за адресою &lt;code&gt;audio/pop.ogg&lt;/code&gt;.
Після цього до вузла &lt;code&gt;pop&lt;/code&gt; додаємо ще один таймер та перейменовуємо його на &lt;code&gt;offset&lt;/code&gt;. Він дозволить сформувати невелику випадкову затримку початку відтворення звуку. Це буде корисно на випадок, коли потрібно буде одночасно створити велику кількість об&amp;rsquo;єктів. Тоді, якщо звук відтворюється одночасно, це звучить неприємно. Тому, ми додаватимемо невелику випадкову затримку.
Для цього таймера лише встановлюємо галочку &lt;code&gt;One Shoot&lt;/code&gt;, так, щоб він не стартував автоматично раз за разом. Тоді його сигнал під&amp;rsquo;єднуємо так само до &lt;code&gt;pop&lt;/code&gt;. В коді функції, що утворилась записуємо два рядки, так щоб вона виглядала таким чином:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-GDScript&#34; data-lang=&#34;GDScript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;_on_Offset_timeout&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;has_node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;AudioStreamPlayer3D&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;nx&#34;&gt;$AudioStreamPlayer3D&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;play&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;А тепер додамо ще функцію &lt;code&gt;_ready()&lt;/code&gt; яка зробить остаточну організацію процесів:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-GDScript&#34; data-lang=&#34;GDScript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;_ready&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;nb&#34;&gt;randomize&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;has_node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Offset&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;nx&#34;&gt;$Offset&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wait_time&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;randf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;offset_time_max&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;nx&#34;&gt;$Offset&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;start&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;elif&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;has_node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;AudioStreamPlayer3D&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;nx&#34;&gt;$AudioStreamPlayer3D&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;play&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;has_node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;AudioStreamPlayer3D&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;nx&#34;&gt;$AudioStreamPlayer3D&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pitch_scale&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;1.0&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;randf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pitch_offset&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pitch_offset&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Ця функція перевіряє, чи є потрібні вузли, вносить потрібні зміни, щоб забезпечити зсув частоти звучання, чи зсув початку відтворення.&lt;/p&gt;
&lt;p&gt;Коли ми закінчили з цим файлом, то створимо його копію для другого звукового файлу, що ми маємо в проекті. Для цього натискаємо в меню &lt;code&gt;Scene&lt;/code&gt; -&amp;gt; &lt;code&gt;Save Scene As&lt;/code&gt; та даємо назву &lt;code&gt;pop2&lt;/code&gt;.
Відтворення першого ефекту ми пізніше додамо на подію проростання грибів. А другий будемо відтворювати коли гравець підняв будь-який предмет.&lt;/p&gt;
&lt;p&gt;Для цього файлу спочатку виділяємо вузол &lt;code&gt;AudioStreamPlayer3D&lt;/code&gt; та в параметр &lt;code&gt;Stream&lt;/code&gt; перетягуємо цього разу файл &lt;code&gt;pop2.wav&lt;/code&gt; в каталозі &lt;code&gt;audio&lt;/code&gt;. Тоді зі сцени видаляємо таймер &lt;code&gt;Offset&lt;/code&gt;. Для цього ефекту нам немає необхідності в затримці відтворення, так як він повинен відтворюватись відразу.&lt;/p&gt;
&lt;p&gt;Зберігаємо усі зміни, та пробуємо гру. Зараз, після піднімання нашої кулі в центрі сцени, ви повинні почути звуковий ефект.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>8. Гриби</title>
        <link>http://localhost:1313/docs/godot/mushroom_forest/080_mushroom/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/docs/godot/mushroom_forest/080_mushroom/</guid>
        <description>&lt;h1 id=&#34;гриби&#34;&gt;Гриби
&lt;/h1&gt;&lt;hr&gt;
&lt;p&gt;Ми уже маємо базову реалізацію об&amp;rsquo;єктів, які можна піднімати. Наслідуючи цю базу в цьому розділі створимо гриби, а після цього реалізуємо їх автоматичне додавання в сцену гри, з випадковим розкиданням по поверхні.
Якщо ви глянете в каталог &lt;code&gt;models/items&lt;/code&gt; то побачите там два файли моделей (&lt;code&gt;shrooms1.glb, shrooms2.glb&lt;/code&gt;). До кожного з них є окремий файл з матеріалом. Обидва ці файли попередньо імпортовано та створено для них сцени, котрі наслідують їх дані. Тож, загляньте в сцени &lt;code&gt;shrooms1.tscn&lt;/code&gt; та &lt;code&gt;shrooms2.tscn&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Кожна з цих сцен містить набір моделей грибів. І усі вони розташовані в центрі сцени. Насправді набір моделей в цих сценах ідентичний. Відрізняються вони тільки матеріалами і текстурами. Перша сцена представляє різноманіття їстівних грибів. А друга неїстівних, а саме - мухоморів.&lt;/p&gt;
&lt;p&gt;Беручи за основу обидві ці сцени, ми створимо нові, які будуть автоматично, на етапі додавання в сцену, обирати одну з моделей для відображення у визначеній позиції.&lt;/p&gt;
&lt;p&gt;Тож, створимо нову сцену. Вона повинна мати тип &lt;code&gt;KinematicBody&lt;/code&gt;. Центральний вузол сцени перейменуємо на &lt;code&gt;shrooms01&lt;/code&gt; та збережемо в каталог &lt;code&gt;objects&lt;/code&gt;. До вузла &lt;code&gt;shrooms01&lt;/code&gt; додамо сцену &lt;code&gt;shrooms1&lt;/code&gt;, яку ми щойно розглядали. Ту, яка в каталозі &lt;code&gt;models/items&lt;/code&gt;. Її відразу перейменуємо на &lt;code&gt;shrooms&lt;/code&gt; без цифри в кінці.
За замовчуванням вузол, який наслідується від сцени, не показує своїх дочірніх елементів. І для нас насправді в цей момент не важливо їх бачити. Головне знати, що вони там є. Але як демонстрація, ми можемо ввімкнути відображення усіх тих моделей. Для цього натискаємо на вузол &lt;code&gt;shrooms&lt;/code&gt; правою клавішею, та обираємо &lt;code&gt;Editable Children&lt;/code&gt;. Тепер ви можете розгорнути і бачити усі вузли, з яких складається ця вкладена сцена.
Далі нам потрібен колайдер, який визначатиме приблизну форму, по якій можна буде клацнути мишкою, щоб персонаж підійшов та підняв. Тому, до вузла &lt;code&gt;shrooms01&lt;/code&gt; додаємо вузол &lt;code&gt;CollisionShape&lt;/code&gt;. Як форму можна обрати кулю. Її треба трохи при-підняти та зменшити, так щоб вона приблизно уміщала в себе моделі грибів. Ті які найвищі можуть трохи виступати згори. Нам головне, щоб ця куля являлась мішенню достатнього розміру для клацання мишею.&lt;/p&gt;
&lt;p&gt;Тепер нам потрібно додати до вузла &lt;code&gt;shrooms01&lt;/code&gt; код, але будьте уважні, бо робити ми це будемо трохи інакше, ніж завжди.
Для початку усе те ж саме - виділяємо вузол &lt;code&gt;shrooms01&lt;/code&gt; в ієрархії сцени. Тоді в інспекторі внизу шукаємо &lt;code&gt;Script&lt;/code&gt; та натискаємо на поле навпроти, там де написано &lt;code&gt;Empty&lt;/code&gt; та обираємо &lt;code&gt;New Script&lt;/code&gt;. Поки усе як і раніше.&lt;/p&gt;
&lt;p&gt;Наступний важливий крок, це в вікні, що з&amp;rsquo;явилось, знайти поле &lt;code&gt;Inharits&lt;/code&gt;, це у нас поки має бути &lt;code&gt;KinematicBody&lt;/code&gt;. Це поле визначає наслідування класу. Навпроти є кнопочка зі значком папки. Натисніть на цю кнопку, та знайдіть код, який ми писали для об&amp;rsquo;єктів, котрі можна піднімати. Він розташований в &lt;code&gt;objects/Pickable.gd&lt;/code&gt;. Тепер коли ми це обрали, можна натиснути &lt;code&gt;Create&lt;/code&gt;. Наш новий код і новий клас зараз наслідує усе від &lt;code&gt;Pickable&lt;/code&gt;. Цього не видно в самому коді, але він уже має усі функції та змінні, що ми визначали для класу &lt;code&gt;Pickable&lt;/code&gt; і ми можемо їх розширити необхідними нам на даний момент.&lt;/p&gt;
&lt;p&gt;Створимо тут нову функцію, котра буде обирати одну з доступних моделей та відображатиме тільки її відразу, як гриб додано до сцени. Код функції буде виглядати таким чином:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-GDScript&#34; data-lang=&#34;GDScript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;random_shroom&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;selected_shroom&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;randi&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;$shrooms&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;get_child_count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$shrooms&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;get_child_count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;nx&#34;&gt;$shrooms&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;get_child&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;visible&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;selected_shroom&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;n&#34;&gt;amount&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;selected_shroom&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;n&#34;&gt;amount&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Ця функція на початку генерує випадкове ціле число в діапазоні кількості дочірніх об&amp;rsquo;єктів всередині вузла &lt;code&gt;shrooms&lt;/code&gt;. Тоді циклічно проходиться по усім дочірнім вузла &lt;code&gt;shrooms&lt;/code&gt; та приховує їх, крім того, який має такий же індекс, як і випадкове число, яке випало в першому рядку функції. Так, для кожного об&amp;rsquo;єкта - гриба, який ми будемо генерувати, вигляд буде обрано різний, із доступних у нас моделей.&lt;/p&gt;
&lt;p&gt;Також цей набір моделей має певну особливість. Вона полягає в тому, що останні дві моделі мають по 3 гриба прикупі. Тому для випадку коли індекс обраного гриба перевищує число &lt;code&gt;8&lt;/code&gt; ми змінюємо значення в змінній &lt;code&gt;amount&lt;/code&gt; на &lt;code&gt;3&lt;/code&gt;. Так коли гравець підніме цей об&amp;rsquo;єкт, йому зарахує як піднімання 3 предметів.&lt;/p&gt;
&lt;p&gt;Нам зараз потрібно, щоб ця функція викликалась на початку існування об&amp;rsquo;єкту. Тому, створюємо функцію &lt;code&gt;_ready()&lt;/code&gt; та дописуємо там два рядки:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-GDScript&#34; data-lang=&#34;GDScript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;_ready&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;nb&#34;&gt;randomize&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;nf&#34;&gt;random_shroom&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Щоб завершити з цією сценою, нам потрібно зробити ще кілька речей. Перше, це надати цьому об&amp;rsquo;єкту ім&amp;rsquo;я, яке буде відображатись в грі. Для цього виділимо вузол &lt;code&gt;shrooms01&lt;/code&gt; та перейдемо в інспектор. Тут вгорі ви побачите параметр &lt;code&gt;Item Name&lt;/code&gt;, як ми мали з нашим першим об&amp;rsquo;єктом на піднімання. Тут можна написати навіть українською - &lt;code&gt;Гриб Боровик&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Ще одна важлива річ, це додати цей об&amp;rsquo;єкт у відповідну групу. Як ви маєте пам&amp;rsquo;ятати, щоб об&amp;rsquo;єкт можна було підняти, він повинен бути в групі &lt;code&gt;pickable&lt;/code&gt;. Тому, з виділеним вузлом &lt;code&gt;shrooms01&lt;/code&gt;, на правій панелі переходимо до вкладки &lt;code&gt;Node&lt;/code&gt;, а там до &lt;code&gt;Groupds&lt;/code&gt;, та додаємо групу &lt;code&gt;pickable&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Тепер збережемо цю сцену. Щоб утворити усе таке ж, але для мухоморів, спершу збережемо цю сцену в новий файл. Натискаємо &lt;code&gt;Scene&lt;/code&gt; -&amp;gt; &lt;code&gt;Save Scene As&lt;/code&gt; та зберігаємо у все той же каталог &lt;code&gt;objects&lt;/code&gt; але з назвою &lt;code&gt;shrooms02&lt;/code&gt;. Видаляємо зі  сцени об&amp;rsquo;єкт &lt;code&gt;shrooms&lt;/code&gt;, той, який містить усі моделі. А тепер на його місце додаємо в сцену файл &lt;code&gt;res://models/items/shrooms2.tscn&lt;/code&gt;. Виправляємо його ім&amp;rsquo;я, так щоб з коду він усе ще був доступним. Для цього просто заберемо цифру в кінці імені і вузол повинен називатись &lt;code&gt;shrooms&lt;/code&gt;. Так нам не доведеться нічого міняти в коді, і обидва види грибів будуть працювати за тією ж логікою. Залишилось змінити назву, яка буде відображатись в грі. Для цього ще раз виділяємо вузол &lt;code&gt;shrooms01&lt;/code&gt;, який є кореневим в цій сцені, а тоді в інспекторі змінюємо текст параметру &lt;code&gt;Item Name&lt;/code&gt; на &lt;code&gt;Мухомор&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;До питання додавання цих усіх грибів в сцену з гравцем, ми дійдемо уже в наступному розділі.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>9. Генерація грибів</title>
        <link>http://localhost:1313/docs/godot/mushroom_forest/090_spawn_mushroom/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/docs/godot/mushroom_forest/090_spawn_mushroom/</guid>
        <description>&lt;h1 id=&#34;генерація-грибів&#34;&gt;Генерація грибів
&lt;/h1&gt;&lt;hr&gt;
&lt;p&gt;Тож, самі гриби уже є. Залишилось придумати спосіб розкладати їх по світу. Для цього повернемось до сцени &lt;code&gt;Main&lt;/code&gt;.
Ми можемо вручну розкласти гриби. Але яка в тому радість. Для цього буде окремий об&amp;rsquo;єкт в сцені, єдина робота якого і полягатиме в розкиданні по сцені грибочків.
Тому, до вузла &lt;code&gt;Main&lt;/code&gt; додаємо новий вузол &lt;code&gt;Spatial&lt;/code&gt; та перейменовуємо його на &lt;code&gt;ItemSpawner&lt;/code&gt;. До цього вузла додамо для початку вузол &lt;code&gt;RayCast&lt;/code&gt;. Він буде нами застосований, для того, щоб знайти точку на карті, яка підійде для висадки. Поки наше ігрове поле досить порожнє. Але в подальшому сюди будуть додані дерева і все таке інше. І нам потрібен спосіб дізнатись, до місце, яке ми обрали для посадки грибів, буде доступне гравцю. Щоб вони росли не всередині дерев чи ще чогось. Тому перш ніж виконати генерацію, ми пускатимем промінь згори, та будемо перевіряти, чи цей промінь зіткнувся з поверхнею землі, а чи з чимось іншим. І тільки якщо це поверхня землі, на місце зіткнення променя буде згенеровано визначений предмет.&lt;/p&gt;
&lt;p&gt;Тож, продовжимо. З виділеним вузлом &lt;code&gt;RayCast&lt;/code&gt;, який ми щойно створили, поглянемо в інспектор. Там нам потрібно ввімкнути наш промінь, інакше він не виконуватиме потрібних нам функцій. Тому ставимо галочку навпроти &lt;code&gt;Enabled&lt;/code&gt;. Наступним, що треба зробити, це змінити його довжину. Промінь ми будемо пускати з достатньої висоти, так щоб він починався вище дерев. Там де параметр &lt;code&gt;Cast To&lt;/code&gt; і три числа, змінюємо значення для осі &lt;code&gt;y&lt;/code&gt; та встановлюємо величину &lt;code&gt;-30&lt;/code&gt;. Цього повинно бути достатньо.&lt;/p&gt;
&lt;p&gt;Тепер щодо його позиції. Перейдемо в розділ &lt;code&gt;Transform&lt;/code&gt; в інспекторі, та змінимо &lt;code&gt;Translation&lt;/code&gt; по усе тій же осі &lt;code&gt;y&lt;/code&gt; на &lt;code&gt;15&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Тепер ще один важливий момент. Ще раз погляньте в інспекторі для об&amp;rsquo;єкту &lt;code&gt;RayCast&lt;/code&gt; вгорі ви знайдете таку річ, яка називається &lt;code&gt;Collision Mask&lt;/code&gt;. Це 32 числа, і відзначено має бути тільки &lt;code&gt;1&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Це дуже важлива особливість фізичних рушіїв в комп&amp;rsquo;ютерних іграх. Фізичний світ в іграх часто розбитий на певну кількість шарів. І частіше це саме 32 шари. Будь-який об&amp;rsquo;єкт може сам по собі бути в будь-якій кількості цих шарів. Як тільки в одному, так і в усіх зразу.&lt;/p&gt;
&lt;p&gt;Виділіть вузол &lt;code&gt;Player&lt;/code&gt; в сцені. Тут, в секції &lt;code&gt;Collision&lt;/code&gt; ви знайдете аж два таких розділи. Один з них &lt;code&gt;Layer&lt;/code&gt;, це якраз в якому фізичному шарі знаходиться цей об&amp;rsquo;єкт. І для гравця обрано шар номер &lt;code&gt;2&lt;/code&gt;. Але є і параметр &lt;code&gt;Mask&lt;/code&gt;. А це те, до яких шарів він чутливий. Тобто, зіткнення з об&amp;rsquo;єктами з якого шару сформує сигнал про цю подію.&lt;/p&gt;
&lt;p&gt;Цей підхід дозволяє створити достатньо складну систему взаємодій. Наприклад, щоб персонаж міг проходити крізь предмети, але усе ще був здатний їх піднімати. А саме це ми і робимо в цій грі.&lt;/p&gt;
&lt;p&gt;Наш гравець знаходиться в другому шарі і сприймає тільки його. Поверхня землі також знаходиться в другому шарі, і завдяки цьому гравець не провалюватиметься крізь землю. Але усі гриби і дерева будуть знаходитись в першому шарі. Тому гравець може крізь них проходити. І при цьому ми усе ще можемо з ними взаємодіяти з допомогою променя з камери.&lt;/p&gt;
&lt;p&gt;Тож, повернемось до вузла &lt;code&gt;RayCast&lt;/code&gt; в вузлі &lt;code&gt;ItemSpawner&lt;/code&gt;. Так як він повинен визначати добре місце для висадки грибів, то повинен стикатись як з поверхнею землі, а це другий шар, так і з усіма іншими об&amp;rsquo;єктами, як то дерева та інші гриби, які скоро заповнять нашу гру. І варто не забувати самого гравця, щоб гриби не виростали прямо у нього під ногами. Тому для вузла &lt;code&gt;RayCast&lt;/code&gt; для параметру &lt;code&gt;Collision Mask&lt;/code&gt; повинні бути відмічені два шари - &lt;code&gt;1&lt;/code&gt; та &lt;code&gt;2&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Тепер коли з цим усім розібрались, пора трохи покодити. Тому, до вузла &lt;code&gt;ItemSpawner&lt;/code&gt; додаємо порожній код.&lt;/p&gt;
&lt;p&gt;Тут буде функція генерації. Її алгоритм полягатиме в тому, щоб виставляти вузол &lt;code&gt;RayCast&lt;/code&gt; у випадкову позицію. Тоді пускати промінь до зіткнення, і якщо зіткнулись з об&amp;rsquo;єктом з групи &lt;code&gt;floor&lt;/code&gt;, тоді усе добре, можна посадити грибок. Але якщо ні, тоді він має спробувати ще в якомусь місці.&lt;/p&gt;
&lt;p&gt;Тільки от так не може бути нескінченно. Інакше є шанс, що гра просто зависне, не в змозі знайти місце, що б підійшло. Тому ми визначимо обмеження. Домовимось, що таких спроб буде не більше ніж 100. Якщо і після сотої спроби нічого хорошого не вдалось знайти, тоді з цим грибом здаємось.&lt;/p&gt;
&lt;p&gt;Також нам треба обмежити діапазон, де саме можуть рости гриби. І поки ми це зробимо просто кількома змінними. Та і взагалі, почнемо зі змінних:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-GDScript&#34; data-lang=&#34;GDScript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;onready&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;main_node&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;get_tree&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;get_root&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;get_node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Main&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;shroom01&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;preload&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;res://objects/shrooms01.tscn&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;shroom02&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;preload&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;res://objects/shrooms02.tscn&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;max_items&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;18&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x_min_max&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Vector2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;13&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;13&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;z_min_max&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Vector2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;40&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Тут у нас є уже традиційне посилання на вузол &lt;code&gt;Main&lt;/code&gt;. Потім попереднє завантаження файлів з грибами в дві змінні.
За цим ми визначаємо змінну, що зберігатиме максимальну кількість грибів.&lt;/p&gt;
&lt;p&gt;Далі ми маємо два вектори, які визначають обмеження в просторі, де саме можуть бути згенеровані об&amp;rsquo;єкти.&lt;/p&gt;
&lt;p&gt;Вернемось ще на секунду в сцену. Нам буде потрібен об&amp;rsquo;єкт, який і міститиме усі згенеровані. Так нам буде легше їх рахувати. Тому, до вузла &lt;code&gt;ItemSpawner&lt;/code&gt; додаємо ще один вузол &lt;code&gt;Spatial&lt;/code&gt; та перейменовуємо його в &lt;code&gt;Items&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Тепер створимо функцію, яка відповідатиме за генерацію екземпляра:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-GDScript&#34; data-lang=&#34;GDScript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;spawn_rand_itam&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;item_list&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;n&#34;&gt;shroom01&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;n&#34;&gt;shroom02&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;place_found&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;place_found&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x_pos&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;randf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x_min_max&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x_min_max&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x_min_max&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;z_pos&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;randf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;z_min_max&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;z_min_max&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;z_min_max&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y_pos&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;$RayCast&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;global_transform&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;origin&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;nx&#34;&gt;$RayCast&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;global_transform&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;origin&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Vector3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x_pos&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y_pos&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;z_pos&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;nx&#34;&gt;$RayCast&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;force_raycast_update&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;$RayCast&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;is_colliding&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;$RayCast&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;get_collider&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;is_in_group&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;floor&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;n&#34;&gt;place_found&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;item_object&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;item_list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;randi&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;item_list&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;instance&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;nx&#34;&gt;$Items&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;add_child&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;item_object&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;n&#34;&gt;item_object&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;global_transform&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;origin&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;$RayCast&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;get_collision_point&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;n&#34;&gt;main_node&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;spawn_effect&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;pop&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;item_object&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;global_transform&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;origin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Ця функція має локальну змінну &lt;code&gt;item_list&lt;/code&gt; в яку сформовано список з тими самими попередньо завантаженими сценами з грибами двох видів. Далі в змінну &lt;code&gt;n&lt;/code&gt; записується значення &lt;code&gt;100&lt;/code&gt;. Ця змінна допоможе слідкувати за тим, щоб ми не зациклились на цьому процесі. Також формується локальна змінна &lt;code&gt;place_found&lt;/code&gt; в яку, якщо знайдено відповідне місце, буде записано &lt;code&gt;true&lt;/code&gt; і це теж є умовою виходу з циклу та завершення виконання функції.&lt;/p&gt;
&lt;p&gt;Ну і сам цикл &lt;code&gt;while&lt;/code&gt; який буде виконуватись доти, поки ми або не знайдемо добре місце, або доки число &lt;code&gt;n &amp;gt; 0&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Далі ми генеруємо випадкові числа для позиції по осі &lt;code&gt;x&lt;/code&gt; та &lt;code&gt;z&lt;/code&gt; в тих межах, які ми визначили в векторах &lt;code&gt;x_min_max&lt;/code&gt; та &lt;code&gt;z_min_max&lt;/code&gt;. Тоді переміщаємо вузол &lt;code&gt;RayCast&lt;/code&gt; в обрану позицію та примушуємо провести оновлення зіткнення. Якщо зіткнення знайдено, і воно з об&amp;rsquo;єктом з групи &lt;code&gt;floor&lt;/code&gt;, тоді записуємо в змінну &lt;code&gt;place_found&lt;/code&gt;, що ми знайшли хорошу позицію, обираємо який саме об&amp;rsquo;єкт зі списку додати в сцену, та генеруємо його за вказаною позицією.&lt;/p&gt;
&lt;p&gt;Також ми викликаємо в сцені ефект &lt;code&gt;pop&lt;/code&gt;, який відтворить потрібний звуковий файл.
Останнім рядком функції, але усе ще в тілі циклу, є віднімання від значення в змінній &lt;code&gt;n&lt;/code&gt; одиниці, так щоб число плавно спускалось до нуля, і коли воно досягне цього значення, цикл припиниться навіть якщо місце не знайдено.&lt;/p&gt;
&lt;p&gt;Маю зауважити, що ми досі не маємо жодного об&amp;rsquo;єкту в групі &lt;code&gt;floor&lt;/code&gt;. Але уже за кілька хвилин це буде виправлено.&lt;/p&gt;
&lt;p&gt;А поки, нам треба хоч десь викликати цю функцію. І для початку ми зробимо це на початку. Та ще й кілька разів, щоб відразу заповнити ліс грибами.&lt;/p&gt;
&lt;p&gt;Тому створюємо функцію &lt;code&gt;_ready()&lt;/code&gt; з таким кодом:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-GDScript&#34; data-lang=&#34;GDScript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;_ready&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;nb&#34;&gt;randomize&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;max_items&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;nf&#34;&gt;spawn_rand_itam&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Тут ми ініціюємо генератор випадкових чисел, а тоді проходимось циклом, але лише по половині величини числа &lt;code&gt;max_items&lt;/code&gt;. Решту грибів ми згенеруємо по таймеру. Для цього до вузла &lt;code&gt;ItemSpawner&lt;/code&gt; додаємо &lt;code&gt;Timer&lt;/code&gt; та перейменовуємо на &lt;code&gt;SpawnTimer&lt;/code&gt;. Він буде спрацьовувати циклічно та дозволить слідкувати, чи грибів достатньо. Якщо ні, новий буде додано в сцену. Для таймера в інспекторі змінимо значення &lt;code&gt;Wait Time&lt;/code&gt; на 5 секунд. Також відзначимо галочкою &lt;code&gt;Autostart&lt;/code&gt;. Приєднаємо сигнал &lt;code&gt;timeout()&lt;/code&gt; до коду вузла &lt;code&gt;ItemSpawner&lt;/code&gt;. Тут напишемо два рядочки, так щоб функція виглядала таким чином:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-GDScript&#34; data-lang=&#34;GDScript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;_on_SpawnTImer_timeout&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;$Items&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;get_child_count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;max_items&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;nf&#34;&gt;spawn_rand_itam&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Тобто, ми перевіряємо, чи у вузлі &lt;code&gt;Items&lt;/code&gt; об&amp;rsquo;єктів не більше, ніж максимальне число, яке ми визначили в змінній &lt;code&gt;max_items&lt;/code&gt;. Якщо це так, додаємо ще один. Так, по мірі того, як гравець збиратиме, кожні пів секунди виростатиме новий. Але сумарна кількість грибів на сцені не перевищуватиме оте максимальне число, яке ми встановили.&lt;/p&gt;
&lt;p&gt;Ну і на останок нам потрібно додати землю в групу &lt;code&gt;floor&lt;/code&gt;. Шукаємо в сцені вузол &lt;code&gt;World/Ground/Floor2&lt;/code&gt; та додаємо його в групу &lt;code&gt;floor&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Спробуйте гру. Зараз по площині світу повинні генеруватись грибочки. Вони можливо трохи замалі. Але це можна виправити. Ще раз відкрийте сцени &lt;code&gt;shrooms01.tscn&lt;/code&gt; та &lt;code&gt;shrooms02.tscn&lt;/code&gt; та скорегуйте розміри колайдерів та вузлів &lt;code&gt;shrooms&lt;/code&gt; десь в 1.5 раза більшими.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>10. Ліс</title>
        <link>http://localhost:1313/docs/godot/mushroom_forest/100_forest/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/docs/godot/mushroom_forest/100_forest/</guid>
        <description>&lt;h1 id=&#34;ліс&#34;&gt;Ліс
&lt;/h1&gt;&lt;hr&gt;
&lt;p&gt;Для цього проекту я підготував модель лісу в &lt;code&gt;Blender&lt;/code&gt;, з усіма деревами розставленими на свої місця.&lt;/p&gt;
&lt;p&gt;Готову імпортовану сцену з лісом ви можете знайти в файлі &lt;code&gt;res://models/scenes/forest_scene.tscn&lt;/code&gt;. Якщо ви прогорнете в самий низ списку, то побачите вузол, який називається &lt;code&gt;mmm&lt;/code&gt;. Це окрема модель, яка містить в собі тільки нижні частини стовбурів або і весь стовбур дерев. Ця модель послужила для генерації статичного об&amp;rsquo;єкту з колайдером, що повторює форму цих стовбурів. Так персонаж не зможе проходити крізь стовбури дерев, а також, гриби не проростатимуть всередині стовбура.&lt;/p&gt;
&lt;p&gt;Посередині сцени також є модель намету. Цей намет немає колайдера, і це приведе до того, що персонаж може крізь нього проходити. Тому, до кореневого вузла в цій сцені додайте &lt;code&gt;StaticBody&lt;/code&gt;. До нього колайдер в формі куба. Нам не критично ідеально передати форму намету. Досить описати його контури з виду зверху. Тому, підганяємо колайдер під позицію і форму намету. Знову виділимо вузол &lt;code&gt;StaticBody&lt;/code&gt;, який ми створили, та в інспекторі в розділі &lt;code&gt;Collision&lt;/code&gt; для обох параметрів і &lt;code&gt;Layer&lt;/code&gt; і &lt;code&gt;Mask&lt;/code&gt; відмічаємо як перший так і другий шар.&lt;/p&gt;
&lt;p&gt;Тож, повернемось до сцени &lt;code&gt;Main&lt;/code&gt; та до вузла &lt;code&gt;World&lt;/code&gt; додамо сцену &lt;code&gt;forest_scene.tscn&lt;/code&gt;. Якщо зараз спробуєте грати, то побачите, що і дерева і намет сильно завеликі в порівнянні з гравцем. Це часта проблема, коли модель виконується в одній програмі, а потім імпортується. Але в цьому випадку її легко виправити. Для вузла з лісом потрібно зменшити масштаб десь до значення 0.2. Це можна зробити з інспектору в розділі &lt;code&gt;Transform&lt;/code&gt;, де змінити значення &lt;code&gt;Scale&lt;/code&gt; для усіх осей.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>11. Збереження гри</title>
        <link>http://localhost:1313/docs/godot/mushroom_forest/110_save_game/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/docs/godot/mushroom_forest/110_save_game/</guid>
        <description>&lt;h1 id=&#34;збереження-гри&#34;&gt;Збереження гри
&lt;/h1&gt;&lt;hr&gt;
&lt;p&gt;Один з важливих аспектів в розробці гри, є збереження прогресу гравця. В цьому розділі ми розглянемо, як це зробити. При цьому, зберігатись будуть не усі дані, а лише ті, які ми визначимо на збереження. І почнемо з положення гравця в світі.&lt;/p&gt;
&lt;p&gt;Але перед тим, нам потрібно створити код, який описуватиме &lt;code&gt;Singlton&lt;/code&gt;, уся робота якого і полягатиме, в зборі даних, їх збереженні та завантаженні в потрібні моменти.&lt;/p&gt;
&lt;p&gt;Тож, в редакторі коду створимо новий файл. Для цього натиснемо &lt;code&gt;File&lt;/code&gt; -&amp;gt; &lt;code&gt;New Script&lt;/code&gt; і назвемо його &lt;code&gt;SaveState&lt;/code&gt;. Тепер, коли файл з кодом, хоч поки і порожній, уже створено, ми можемо його додати на автоматичне запускання разом з грою. Для цього переходимо до &lt;code&gt;Project&lt;/code&gt; -&amp;gt; &lt;code&gt;Project Settings&lt;/code&gt;. А тут на вкладку &lt;code&gt;AutoLoad&lt;/code&gt;. Вгорі, навпроти поля &lt;code&gt;Path&lt;/code&gt; натискаємо кнопку з намальованою папочкою, та шукаємо наш новий файл &lt;code&gt;SaveState.gd&lt;/code&gt;. Після того, як обрали його, не забудьте натиснути &lt;code&gt;Add&lt;/code&gt; в кінці цієї строки.&lt;/p&gt;
&lt;p&gt;Цей увесь процес із &lt;code&gt;SaveState.gd&lt;/code&gt; створило об&amp;rsquo;єкт - &lt;code&gt;Singlton&lt;/code&gt;. Тобто, такий, який існує поза сценою в єдиному екземплярі, та доступний усім об&amp;rsquo;єктам в сцені.&lt;/p&gt;
&lt;p&gt;Закриємо вікно налаштування та повернемось до коду &lt;code&gt;SaveState.gd&lt;/code&gt;. Тут почнемо з того, що вкажемо глобальну змінну, яка зберігатиме шлях до файлу збереження:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-GDScript&#34; data-lang=&#34;GDScript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;save_filename&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;user://save_game.save&amp;#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Як ви бачите, шлях до файлу починається з &lt;code&gt;user://&lt;/code&gt;. Ця адреса відповідає шляху, куди ваша операційна система зберігає подібні файли конфігурацій для різних програм. Так, збереження будуть розміщені окремо від самої гри, і навіть якщо гру видалено та заново встановлено, є шанс, що ви усе ще матимете ваш прогрес походження на своєму місці.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Windows:&lt;/strong&gt; &lt;code&gt;%APPDATA%\Godot\&lt;/code&gt;&lt;br&gt;
&lt;strong&gt;macOS:&lt;/strong&gt; &lt;code&gt;~/Library/Application Support/Godot/&lt;/code&gt;&lt;br&gt;
&lt;strong&gt;Linux:&lt;/strong&gt; &lt;code&gt;~/.local/share/godot/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Але, якщо вам того хочеться, ви все ще можете використовувати шлях, який розпочинається з &lt;code&gt;res://&lt;/code&gt;. Тоді файл буде створено в каталозі з грою.&lt;/p&gt;
&lt;p&gt;Далі створимо функцію, яка відповідатиме за збереження даних гри.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-GDScript&#34; data-lang=&#34;GDScript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;save_game&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;save_file&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;File&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;n&#34;&gt;save_file&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;save_filename&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;File&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;WRITE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;saved_nodes&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;get_tree&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;get_nodes_in_group&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;saved&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;node&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;saved_nodes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;node_details&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;node&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;get_save_stats&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;n&#34;&gt;save_file&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;store_line&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;to_json&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;node_details&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;n&#34;&gt;save_file&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;close&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Тут спочатку створюється новий файл та записується в змінну &lt;code&gt;save_file&lt;/code&gt;. Тоді для цього файлу відкривається визначений нами шлях, що збережено в змінну &lt;code&gt;save_filename&lt;/code&gt;. І відкривається він на запис, чому свідчить вказівка &lt;code&gt;FIle.WRITE&lt;/code&gt; в кінці функції відкривання.&lt;/p&gt;
&lt;p&gt;Далі ми збираємо список усіх вузлів, котрі додано до групи &lt;code&gt;saved&lt;/code&gt;. Ми поки не маємо такої групи. Згодом будемо до неї додавати вузли. Але поки знатимем, що зберігатимуться дані тільки про вузли, які в цій групі.&lt;/p&gt;
&lt;p&gt;Коли список сформований, тоді проходимо по усім цим вузлам, та робимо запит їх даних за допомогою функції &lt;code&gt;get_stats()&lt;/code&gt;. Ця функція так само поки не існує. Вона повинна бути створена для усіх об&amp;rsquo;єктів, які ми хочемо зберігати. І повертати ця функція повинна дані у вигляді словника.&lt;/p&gt;
&lt;p&gt;Після того, як дані для вузла отримано, конвертуємо їх в &lt;code&gt;json&lt;/code&gt; та записуємо як строку в наш файл збереження.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;json&lt;/code&gt; - це такий зручний спосіб зберігати структуровані дані у вигляді тексту з маркуванням. Дані зберігаються в формі, що схожа на словники. Тобто, є набори ключів та даних. &lt;code&gt;json&lt;/code&gt; також має свої обмеження, і ми це будемо враховувати, коли формуватимемо наші дані про об&amp;rsquo;єкти в словники.&lt;/p&gt;
&lt;p&gt;А поки, нам треба прийняти рішення, коли саме буде відбуватись збереження. І замість того, щоб примушувати гравця натискати кнопку в меню, збереження відбуватиметься кожен раз, як гра закривається. При коректному закриванні програм, вони отримують відповідний сигнал, і мають час, на те, щоб коректно завершити свою роботу. В &lt;code&gt;Godot&lt;/code&gt; усі подібні речі опрацьовуються як сповіщення і для цього існує вбудована функція. Тому, зараз в коді &lt;code&gt;SaveState.gd&lt;/code&gt; додамо таку функцію, та відфільтруємо сповіщення, так щоб збереження відбувалось саме на закривання гри, а не на що інше:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-GDScript&#34; data-lang=&#34;GDScript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;_notification&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;what&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;what&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;MainLoop&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;NOTIFICATION_WM_QUIT_REQUEST&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;nf&#34;&gt;save_game&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Якщо ж ваша гра повинна запускатись на &lt;code&gt;Android&lt;/code&gt;, тоді треба опрацьовувати сповіщення &lt;code&gt;MainLoop.NOTIFICATION_WM_GO_BACK_REQUEST&lt;/code&gt;. Тобто, сповіщення натискання клавіші назад. На закривання сповіщення там не приходить.&lt;/p&gt;
&lt;p&gt;Тож, ми маємо функцію збереження, і вона навіть уже повинна викликатись, коли гравець закриває гру. Але поки жоден об&amp;rsquo;єкт не доданий до списку збереження. Виправимо цю ситуацію, і почнемо з персонажа. Зберігати ми будемо його позицію в просторі світу.
Для цього переходимо до коду гравця. Тут ми зробимо відразу дві функції. Одна з них буде збирати і передавати необхідні дані, а друга, з отриманих даних відновлювати позицію персонажу.&lt;/p&gt;
&lt;p&gt;Перша функція повинна виглядати таким чином:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-GDScript&#34; data-lang=&#34;GDScript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;get_save_stats&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;save_stats&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;n&#34;&gt;save_stats&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;scenepath&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;get_path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;n&#34;&gt;save_stats&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x_pos&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;global_transform&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;origin&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;n&#34;&gt;save_stats&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y_pos&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;global_transform&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;origin&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;n&#34;&gt;save_stats&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;z_pos&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;global_transform&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;origin&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;z&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;save_stats&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Вона спочатку формує порожній словник. До цього словника додає дані про позицію вузла в ієрархії сцени, та записує з ключем &lt;code&gt;scenepath&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;А далі ви можете побачити важливу особливість &lt;code&gt;json&lt;/code&gt;. Ми не можемо просто записати цілий вектор. Тому нам його треба розбивати на складові і кожну зберігати своєю парою з ключа та даних. Тому, дані про позицію ми розбиваємо на три порції, ко кожній осі окремо.&lt;/p&gt;
&lt;p&gt;По завершенню формування словника, ми його повертаємо з функції.&lt;/p&gt;
&lt;p&gt;І наступною буде функція завантаження:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-GDScript&#34; data-lang=&#34;GDScript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;load_save_stats&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stats&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;n&#34;&gt;global_transform&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;origin&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Vector3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stats&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x_pos&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;stats&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y_pos&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;stats&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;z_pos&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Тут усе дуже просто. Цій функції передається отриманий з файлу словник. І навіть не увесь словник, а тільки дані, які стосуються цього об&amp;rsquo;єкту. Тоді, звідти нас цікавлять тільки координати, і ми їх формуємо знову в 3-вимірний вектор, та передаємо вузлу як його глобальна позиція.&lt;/p&gt;
&lt;p&gt;Щоб збереження уже працювало, нам залишилось додати гравця в групу &lt;code&gt;saved&lt;/code&gt;. Прослідкуємо, щоб це було саме так.&lt;/p&gt;
&lt;p&gt;Можете зараз запустити гру, трохи прогулятись та закрити її знову. З вигляду наче нічого не відбулось. Але якщо ви перейдете за адресою, куди система зберегла нашу гру, та відкриєте його, то можете побачити там щось таке:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;{&amp;#34;scenepath&amp;#34;:&amp;#34;/root/Main/Player&amp;#34;,&amp;#34;x_pos&amp;#34;:-6.638752,&amp;#34;y_pos&amp;#34;:0.048111,&amp;#34;z_pos&amp;#34;:12.833146}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Цей рядок містить дані про позицію вузла гравця в ієрархії гри, а за цим координати в просторі, як ми і хотіли. Тепер залишилось тільки реалізувати завантаження цих даних.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>12. Завантаження гри</title>
        <link>http://localhost:1313/docs/godot/mushroom_forest/120_load_game/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/docs/godot/mushroom_forest/120_load_game/</guid>
        <description>&lt;h1 id=&#34;завантаження-гри&#34;&gt;Завантаження гри
&lt;/h1&gt;&lt;hr&gt;
&lt;p&gt;Ми уже вміємо зберігати. Але яка в цім радість, якщо не можемо завантажувати. Тому, повернемось в код &lt;code&gt;SaveState.gd&lt;/code&gt; та додамо ось таку функцію:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-GDScript&#34; data-lang=&#34;GDScript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;load_game&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;save_file&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;File&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;save_file&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;file_exists&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;save_filename&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;n&#34;&gt;save_file&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;save_filename&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;File&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;READ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;save_file&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;get_position&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;save_file&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;get_len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;node_data&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;parse_json&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;save_file&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;get_line&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;scenepath&amp;#34;&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;node_data&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;keys&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;nf&#34;&gt;get_node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;node_data&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;scenepath&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;call_deferred&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;load_save_stats&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;node_data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Тут ми знову формуємо змінну, яка повинна вказувати на файл. Далі робимо перевірку, чи файл, за вказаною нами адресою, існує. Якщо ні, тоді нам нема чого робити, і виконання функції припиняється.&lt;/p&gt;
&lt;p&gt;Якщо ж файл усе таки існує, тоді відкриваємо його на читання, про що свідчить &lt;code&gt;File.READ&lt;/code&gt; в кінці виклику функції &lt;code&gt;open()&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Далі формується цикл, яки буде виконуватись доти, поки ми не досягнемо кінця файлу.&lt;/p&gt;
&lt;p&gt;В циклі, виймаємо з файлу один рядок даних. А ми зберігаємо дані про кожен об&amp;rsquo;єкт саме рядками, тому в змінній &lt;code&gt;node_data&lt;/code&gt; якраз і має бути вичерпна інформація про один з вузлів. Далі перевіряємо, чи серед даних, що ми отримали з рядка, є ключ &lt;code&gt;scenepath&lt;/code&gt;. Якщо він існує, тоді шукаємо вузол з таким шляхом, та викликаємо для нього функцію &lt;code&gt;load_save_stats&lt;/code&gt; і передаємо дані. Але функцію ми викликаємо особливим чином, застосовуючи &lt;code&gt;call_deferred&lt;/code&gt;, тобто, відкладений виклик. Виклик, який виконується поза загальним циклом, коли його виконання допустимо.&lt;/p&gt;
&lt;p&gt;Це тому, що зчитування файлу може займати якийсь час. І в момент, коли цей процес завершено, вузол, до якого ми звертаємось, може бути зайнятий важливими діяннями.&lt;/p&gt;
&lt;p&gt;Так, цикл зчитування даних буде продовжуватись рядок за рядком, та гра буде завантажена і відновлена до того стану, якою її залишив гравець.&lt;/p&gt;
&lt;p&gt;Одна лише річ, що ми створили функцію завантаження, але ніколи її не викликали. Тому, формуємо функцію &lt;code&gt;_ready()&lt;/code&gt;, та викликаємо завантаження звідти.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-GDScript&#34; data-lang=&#34;GDScript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;_ready&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;nf&#34;&gt;load_game&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Тепер спробуйте кілька разів запустити гру, переміститись кудись та знову закрити. Після кожного закривання позиція гравця буде збережена. А після відкривання, відновлена.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>13. Збереження інвентарю</title>
        <link>http://localhost:1313/docs/godot/mushroom_forest/130_save_items/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/docs/godot/mushroom_forest/130_save_items/</guid>
        <description>&lt;h1 id=&#34;збереження-інвентарю&#34;&gt;Збереження інвентарю
&lt;/h1&gt;&lt;hr&gt;
&lt;p&gt;У нас уже є система для збереження та завантаження гри. Але досі ми цей процес проводили тільки для позиції персонажу. Трохи розширимо систему, так щоб вона включала також і дані про усі пожитки гравця.&lt;/p&gt;
&lt;p&gt;Поки, ми можемо збирати гриби, і дані про усе, що ми зібрали відображаються в текстовому полі внизу екрану. При цьому, уся інформація про інвентар гравця збирається і обробляється вузлом &lt;code&gt;ItemHolder&lt;/code&gt;. Тому ми і будемо працювати з його кодом. Почнемо з функції, яка збирає усі необхідні дані та формує з них словник:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-GDScript&#34; data-lang=&#34;GDScript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;get_save_stats&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;save_stats&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;n&#34;&gt;save_stats&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;scenepath&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;get_path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;n&#34;&gt;save_stats&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;money&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;money&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;k&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;items&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;keys&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;n&#34;&gt;save_stats&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;item.&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;k&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;items&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;k&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;save_stats&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Тут формується словник. Як і з гравцем, першим додається ключ і дані, що описують позицію вузла в ієрархії сцени. Далі додається ключ &lt;code&gt;money&lt;/code&gt; куди передаються дані про фінанси гравця. А за цим будуть дані про усі предмети, які зібрано. І при чому, зберігатись вони будуть трохи особливо. На початок кожного ключа додається &lt;code&gt;item.&lt;/code&gt;. Це в подальшому нам полегшить читання та розпізнання цих даних.&lt;/p&gt;
&lt;p&gt;Тепер додамо функцію завантаження даних:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-GDScript&#34; data-lang=&#34;GDScript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;load_save_stats&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stats&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;n&#34;&gt;money&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;stats&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;money&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;k&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;stats&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;keys&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;item.&amp;#34;&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;k&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;n&#34;&gt;items&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;k&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;split&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;stats&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;k&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;nf&#34;&gt;update_item_view&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Тут функція отримує словник з даними, звідки ми відразу виймаємо фінансовий статок, та записуємо у відповідну змінну.
А після цього циклом проходимось по усім наявним ключам в словнику, і якщо ключ починається з &lt;code&gt;item.&lt;/code&gt;, тоді ці дані передаються в наш словник, котрий зберігає ці дані. Але передаються вони уже без того &lt;code&gt;item.&lt;/code&gt; на початку ключа. Для цього ми скористались методом &lt;code&gt;split()&lt;/code&gt;, якому можна передати символ (в нашому випадку це точка), і він поверне той самий текст, але розділений на секції у вигляді списку. Тоді ми можемо взяти тільки другий елемент з цього списку.&lt;/p&gt;
&lt;p&gt;По завершенню вичитування і заповнення усіх даних, викликається функція для оновлення відображення усіх цих даних.&lt;/p&gt;
&lt;p&gt;І знову ж, щоб усе це працювало нам потрібно ще додати вузол &lt;code&gt;ItemHolder&lt;/code&gt; до групи &lt;code&gt;saved&lt;/code&gt;. Коли це зроблено, знову кілька разів спробуйте гру, та раз пораз збирайте по кілька грибів. Після кожного відкривання, дані будуть відновлюватись в тій самій формі, що й були до закривання гри.&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
